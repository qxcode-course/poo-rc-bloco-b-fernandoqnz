{
    "patches": [
        {
            "label": "2025-10-25_14-03-16",
            "content": "@@ -1,3938 +0,0 @@\n-class Bateria:%0A    def __init__(self, capacidade: int):%0A        self.__capacidade = capacidade%0A        self.__carga = capacidade%0A%0A    def getCarga(self) -%3E int:%0A        return self.__carga%0A%0A    def getCapacidade(self) -%3E int:%0A        return self.__capacidade%0A%0A    def usar(self, tempo: int) -%3E int:%0A        gasto = min(self.__carga, tempo)%0A        self.__carga -= gasto%0A        return gasto%0A%0A    def carregar(self, tempo: int, potencia: int):%0A        self.__carga = min(self.__capacidade, self.__carga + tempo * potencia)%0A%0A    def __str__(self):%0A        return f%22%7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A%0A    def getPotencia(self) -%3E int:%0A        return self.__potencia%0A%0A    def __str__(self):%0A        return f%22%7Bself.__potencia%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado = False%0A        self.__tempo_ligado = 0%0A        self.__bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None%0A%0A    def setBateria(self, bateria: Bateria):%0A        self.__bateria = bateria%0A%0A    def rmBateria(self):%0A        if self.__bateria:%0A            print(f%22Removido %7Bself.__bateria%7D%22)%0A            self.__bateria = None%0A        else:%0A            print(%22fail: Sem bateria%22)%0A%0A    def setCharger(self, carregador: Carregador):%0A        if self.__carregador:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A        else:%0A            self.__carregador = carregador%0A%0A    def rmCharger(self):%0A        if self.__carregador:%0A            print(f%22Removido %7Bself.__carregador%7D%22)%0A            self.__carregador = None%0A        else:%0A            print(%22fail: Sem carregador%22)%0A%0A    def turnOn(self):%0A        if (self.__bateria and self.__bateria.getCarga() %3E 0) or self.__carregador:%0A            self.__ligado = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def turnOff(self):%0A        self.__ligado = False%0A%0A    def use(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        if self.__bateria and not self.__carregador:%0A            gasto = self.__bateria.usar(tempo)%0A            self.__tempo_ligado += gasto%0A            if gasto %3C tempo:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A        elif self.__bateria and self.__carregador:%0A            # notebook em uso com carregador%0A            self.__bateria.carregar(tempo, self.__carregador.getPotencia())%0A            self.__tempo_ligado += tempo%0A        else:%0A            # s%C3%B3 carregador%0A            self.__tempo_ligado += tempo%0A%0A    def show(self):%0A        status = %22ligado%22 if self.__ligado else %22desligado%22%0A        s = f%22Notebook: %7Bstatus%7D%22%0A        if self.__ligado:%0A            s += f%22 por %7Bself.__tempo_ligado%7D min%22%0A        if self.__carregador:%0A            s += f%22, Carregador %7Bself.__carregador%7D%22%0A        if self.__bateria:%0A            s += f%22, Bateria %7Bself.__bateria%7D%22%0A        print(s)%0A%0A%0Adef main():%0A    notebook = Notebook()%0A    while True:%0A        try:%0A            cmd = input(%22$%22).strip()%0A        except EOFError:%0A            break%0A        if not cmd:%0A            continue%0A        parts = cmd.split()%0A        if parts%5B0%5D == %22end%22:%0A            break%0A        elif parts%5B0%5D == %22show%22:%0A            notebook.show()%0A        elif parts%5B0%5D == %22set_battery%22:%0A            notebook.setBateria(Bateria(int(parts%5B1%5D)))%0A        elif parts%5B0%5D == %22rm_battery%22:%0A            notebook.rmBateria()%0A        elif parts%5B0%5D == %22set_charger%22:%0A            notebook.setCharger(Carregador(int(parts%5B1%5D)))%0A        elif parts%5B0%5D == %22rm_charger%22:%0A            notebook.rmCharger()%0A        elif parts%5B0%5D == %22turn_on%22:%0A            notebook.turnOn()%0A        elif parts%5B0%5D == %22turn_off%22:%0A            notebook.turnOff()%0A        elif parts%5B0%5D == %22use%22:%0A            notebook.use(int(parts%5B1%5D))%0A        else:%0A            print(%22fail: comando invalido%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-25_14-04-43",
            "content": "@@ -3042,20 +3042,19 @@\n         \n-line\n+cmd\n  = input\n@@ -3054,16 +3054,19 @@\n = input(\n+%22$%22\n ).strip(\n@@ -3125,20 +3125,19 @@\n  if not \n-line\n+cmd\n :%0A      \n@@ -3155,64 +3155,8 @@\n nue%0A\n-        print(f%22$%7Bline%7D%22)  # imprime o comando digitado%0A\n     \n@@ -3171,12 +3171,11 @@\n s = \n-line\n+cmd\n .spl\n@@ -3893,17 +3893,16 @@\n ido%22)%0A%0A%0A\n-%0A\n if __nam\n",
            "lines": "138"
        },
        {
            "label": "2025-10-25_14-06-00",
            "content": "@@ -141,24 +141,31 @@\n tCarga(self)\n+ -%3E int\n :%0A        re\n@@ -206,24 +206,31 @@\n cidade(self)\n+ -%3E int\n :%0A        re\n@@ -281,168 +281,64 @@\n empo\n-):%0A        if tempo %3E= self.__carga:%0A            tempo_usado = self.__carga%0A            self.__carga = 0%0A            return tempo_usado, True%0A        else:%0A    \n+: int) -%3E int:%0A        gasto = min(self.__carga, tempo)%0A\n     \n@@ -361,18 +361,14 @@\n  -= \n-tempo%0A    \n+gasto%0A\n     \n@@ -382,20 +382,13 @@\n urn \n-tempo, False\n+gasto\n %0A%0A  \n@@ -413,16 +413,21 @@\n f, tempo\n+: int\n , potenc\n@@ -428,16 +428,21 @@\n potencia\n+: int\n ):%0A     \n@@ -461,54 +461,14 @@\n rga \n-+\n = \n-tempo * potencia%0A        if self.__carga %3E \n+min(\n self\n@@ -480,29 +480,17 @@\n pacidade\n-:%0A           \n+,\n  self.__\n@@ -499,27 +499,27 @@\n rga \n-= self.__capacidade\n++ tempo * potencia)\n %0A%0A  \n@@ -704,32 +704,39 @@\n etPotencia(self)\n+ -%3E int\n :%0A        return\n@@ -904,87 +904,122 @@\n f.__\n-bateria = None%0A        self.__carregador = None%0A        self.__tempo_ligado = 0\n+tempo_ligado = 0%0A        self.__bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None\n %0A%0A  \n@@ -1126,28 +1126,24 @@\n %0A        if \n-not \n self.__bater\n@@ -1168,26 +1168,35 @@\n int(\n-%22fail: Sem \n+f%22Removido %7Bself.__\n bateria\n+%7D\n %22)%0A \n@@ -1209,32 +1209,8 @@\n     \n- return None%0A        b =\n  sel\n@@ -1220,16 +1220,23 @@\n _bateria\n+ = None\n %0A       \n@@ -1240,77 +1240,52 @@\n     \n-s\n el\n-f.__bateria = None%0A        print(f%22Removido %7Bb%7D%22)%0A        return b\n+se:%0A            print(%22fail: Sem bateria%22)\n %0A%0A  \n@@ -1294,24 +1294,21 @@\n def setC\n+h\n ar\n-regado\n+ge\n r(self, \n@@ -1417,35 +1417,34 @@\n o%22)%0A        \n-    return%0A\n+else:%0A    \n         self\n@@ -1482,24 +1482,21 @@\n  def rmC\n+h\n ar\n-regado\n+ge\n r(self):\n@@ -1503,28 +1503,24 @@\n %0A        if \n-not \n self.__carre\n@@ -1544,27 +1544,35 @@\n   print(\n-%22fail: Sem \n+f%22Removido %7Bself.__\n carregad\n@@ -1573,16 +1573,17 @@\n rregador\n+%7D\n %22)%0A     \n@@ -1591,43 +1591,10 @@\n     \n-  \n-return%0A        print(f%22Removido %7B\n+  \n self\n@@ -1598,35 +1598,39 @@\n elf.__carregador\n-%7D%22)\n+ = None\n %0A        self.__\n@@ -1614,39 +1614,67 @@\n  = None%0A        \n-self.__\n+else:%0A            print(%22fail: Sem \n carregador = Non\n@@ -1667,23 +1667,18 @@\n rregador\n- = None\n+%22)\n %0A%0A    de\n@@ -1679,21 +1679,22 @@\n     def \n-ligar\n+turnOn\n (self):%0A\n@@ -1883,24 +1883,23 @@\n     def \n-desligar\n+turnOff\n (self):%0A\n@@ -1931,34 +1931,33 @@\n alse%0A%0A    def us\n-ar\n+e\n (self, tempo: in\n@@ -2050,95 +2050,9 @@\n urn%0A\n-        tempo_total = 0%0A        descarregou = False%0A        for t in range(tempo):%0A    \n+%0A\n     \n@@ -2073,24 +2073,28 @@\n bateria and \n+not \n self.__carre\n@@ -2104,35 +2104,39 @@\n or:%0A            \n-   \n+gasto =\n  self.__bateria.\n@@ -2139,52 +2139,60 @@\n ria.\n-carregar(1, self.__carregador.getPotencia())\n+usar(tempo)%0A            self.__tempo_ligado += gasto\n %0A   \n@@ -2204,27 +2204,24 @@\n     \n-el\n if \n-self.__bateria\n+gasto %3C tempo\n :%0A  \n@@ -2238,89 +2238,168 @@\n     \n-tempo_usado, descarregou = self.__bateria.usar(1)%0A                if des\n+print(%22fail: descarregou%22)%0A                self.__ligado = False%0A        elif self.__bateria and self.__carregador:%0A            # notebook em uso com \n carreg\n-ou:\n+ador\n %0A   \n@@ -2411,51 +2411,72 @@\n     \n-        print(%22fail: descarregou%22)%0A        \n+self.__bateria.carregar(tempo, self.__carregador.getPotencia())%0A\n     \n@@ -2486,38 +2486,45 @@\n      self.__\n+tempo_\n ligado \n++\n = \n-False\n+tempo\n %0A           \n@@ -2512,32 +2512,38 @@\n = tempo%0A        \n+else:%0A\n             brea\n@@ -2542,51 +2542,36 @@\n     \n-break%0A            tempo_total += 1%0A\n+# s%C3%B3 carregador%0A       \n      \n-   \n self\n@@ -2598,14 +2598,8 @@\n empo\n-_total\n %0A%0A  \n@@ -2628,15 +2628,73 @@\n     \n-info\n+status = %22ligado%22 if self.__ligado else %22desligado%22%0A        s\n  = \n+f\n %22Not\n@@ -2700,16 +2700,24 @@\n tebook: \n+%7Bstatus%7D\n %22%0A      \n@@ -2752,24 +2752,15 @@\n     \n-info\n+s\n  += f%22\n-ligado\n  por\n@@ -2791,54 +2791,8 @@\n in%22%0A\n-        else:%0A            info += %22desligado%22%0A\n     \n@@ -2821,36 +2821,33 @@\n or:%0A            \n-info\n+s\n  += f%22, Carregad\n@@ -2909,20 +2909,17 @@\n         \n-info\n+s\n  += f%22, \n@@ -2962,12 +2962,9 @@\n int(\n-info\n+s\n )%0A%0A%0A\n@@ -2980,17 +2980,23 @@\n ):%0A    n\n-b\n+otebook\n  = Noteb\n@@ -3029,27 +3029,17 @@\n     \n-print(%22$%22, end=%22%22)%0A\n+try:%0A    \n     \n@@ -3065,16 +3065,59 @@\n strip()%0A\n+        except EOFError:%0A            break%0A\n         \n@@ -3158,19 +3158,77 @@\n         \n-cmd\n+print(f%22$%7Bline%7D%22)  # imprime o comando digitado%0A        parts\n  = line.\n@@ -3235,17 +3235,16 @@\n split()%0A\n-%0A\n         \n@@ -3246,19 +3246,21 @@\n      if \n-cmd\n+parts\n %5B0%5D == %22\n@@ -3288,35 +3288,37 @@\n ak%0A        elif \n-cmd\n+parts\n %5B0%5D == %22show%22:%0A \n@@ -3329,17 +3329,23 @@\n        n\n-b\n+otebook\n .show()%0A\n@@ -3353,35 +3353,37 @@\n        elif \n-cmd\n+parts\n %5B0%5D == %22\n turn_on%22:%0A  \n@@ -3374,70 +3374,76 @@\n == %22\n-turn_on%22:%0A            print(f%22$turn_on%22)%0A            nb.ligar(\n+set_battery%22:%0A            notebook.setBateria(Bateria(int(parts%5B1%5D))\n )%0A  \n@@ -3453,27 +3453,29 @@\n    elif \n-cmd\n+parts\n %5B0%5D == %22\n turn_off\n@@ -3470,16 +3470,18 @@\n == %22\n-turn_off\n+rm_battery\n %22:%0A \n@@ -3496,18 +3496,25 @@\n    n\n-b.desligar\n+otebook.rmBateria\n ()%0A \n@@ -3525,27 +3525,29 @@\n    elif \n-cmd\n+parts\n %5B0%5D == %22\n use%22:%0A  \n@@ -3538,19 +3538,27 @@\n %5B0%5D == %22\n-u\n se\n+t_charger\n %22:%0A     \n@@ -3569,27 +3569,53 @@\n    n\n-b.usar(int(cmd\n+otebook.setCharger(Carregador(int(parts\n %5B1%5D))\n+)\n %0A   \n@@ -3620,35 +3620,37 @@\n        elif \n-cmd\n+parts\n %5B0%5D == %22\n set_battery%22\n@@ -3633,35 +3633,34 @@\n arts%5B0%5D == %22\n-set_batt\n+rm_charg\n er\n-y\n %22:%0A         \n@@ -3666,60 +3666,27 @@\n     \n-b = Bateria(int(cmd%5B1%5D))%0A            nb.setBateria(b\n+notebook.rmCharger(\n )%0A  \n@@ -3696,27 +3696,29 @@\n    elif \n-cmd\n+parts\n %5B0%5D == %22\n rm_batte\n@@ -3705,34 +3705,31 @@\n arts%5B0%5D == %22\n-rm_battery\n+turn_on\n %22:%0A         \n@@ -3736,19 +3736,22 @@\n    n\n-b.rmBateria\n+otebook.turnOn\n ()%0A \n@@ -3762,27 +3762,29 @@\n    elif \n-cmd\n+parts\n %5B0%5D == %22\n set_char\n@@ -3771,35 +3771,32 @@\n arts%5B0%5D == %22\n-set_charger\n+turn_off\n %22:%0A         \n@@ -3802,66 +3802,25 @@\n     \n-c = Carregador(int(cmd%5B1%5D))%0A            nb.setCarregador(c\n+notebook.turnOff(\n )%0A  \n@@ -3834,19 +3834,21 @@\n lif \n-cmd\n+parts\n %5B0%5D == %22\n rm_c\n@@ -3839,34 +3839,27 @@\n arts%5B0%5D == %22\n-rm_charger\n+use\n %22:%0A         \n@@ -3866,23 +3866,33 @@\n    n\n-b.rmCarregador(\n+otebook.use(int(parts%5B1%5D)\n )%0A  \n@@ -3949,16 +3949,17 @@\n ido%22)%0A%0A%0A\n+%0A\n if __nam\n",
            "lines": "140"
        },
        {
            "label": "2025-10-25_14-08-56",
            "content": "@@ -141,31 +141,24 @@\n tCarga(self)\n- -%3E int\n :%0A        re\n@@ -199,31 +199,24 @@\n cidade(self)\n- -%3E int\n :%0A        re\n@@ -267,64 +267,168 @@\n empo\n-: int) -%3E int:%0A        gasto = min(self.__carga, tempo)%0A\n+):%0A        if tempo %3E= self.__carga:%0A            tempo_usado = self.__carga%0A            self.__carga = 0%0A            return tempo_usado, True%0A        else:%0A    \n     \n@@ -447,22 +447,26 @@\n arga -= \n-gasto%0A\n+tempo%0A    \n         \n@@ -472,21 +472,28 @@\n  return \n-gasto\n+tempo, False\n %0A%0A    de\n@@ -514,21 +514,16 @@\n f, tempo\n-: int\n , potenc\n@@ -516,37 +516,32 @@\n  tempo, potencia\n-: int\n ):%0A        self.\n@@ -552,14 +552,54 @@\n rga \n++\n = \n-min(\n+tempo * potencia%0A        if self.__carga %3E \n self\n@@ -611,17 +611,29 @@\n pacidade\n-,\n+:%0A           \n  self.__\n@@ -642,27 +642,27 @@\n rga \n-+ tempo * potencia)\n+= self.__capacidade\n %0A%0A  \n@@ -859,15 +859,8 @@\n elf)\n- -%3E int\n :%0A  \n@@ -1040,122 +1040,87 @@\n f.__\n-tempo_ligado = 0%0A        self.__bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None\n+bateria = None%0A        self.__carregador = None%0A        self.__tempo_ligado = 0\n %0A%0A  \n@@ -1223,32 +1223,36 @@\n lf):%0A        if \n+not \n self.__bateria:%0A\n@@ -1273,35 +1273,26 @@\n int(\n-f%22Removido %7Bself.__\n+%22fail: Sem \n bateria\n-%7D\n %22)%0A \n@@ -1293,32 +1293,56 @@\n ia%22)%0A           \n+ return None%0A        b =\n  self.__bateria \n@@ -1332,39 +1332,32 @@\n = self.__bateria\n- = None\n %0A        else:%0A \n@@ -1349,32 +1349,46 @@\n         \n+s\n el\n-se:%0A  \n+f.__bateria = None%0A\n         \n   print(\n@@ -1383,36 +1383,47 @@\n     \n-  \n print(\n-%22fail: Sem bateria%22)\n+f%22Removido %7Bb%7D%22)%0A        return b\n %0A%0A  \n@@ -1432,21 +1432,24 @@\n def setC\n-h\n ar\n-ge\n+regado\n r(self, \n@@ -1558,34 +1558,35 @@\n o%22)%0A        \n-else:%0A    \n+    return%0A\n         self\n@@ -1624,21 +1624,24 @@\n  def rmC\n-h\n ar\n-ge\n+regado\n r(self):\n@@ -1644,32 +1644,36 @@\n lf):%0A        if \n+not \n self.__carregado\n@@ -1697,27 +1697,19 @@\n int(\n-f%22Removido %7Bself.__\n+%22fail: Sem \n carr\n@@ -1714,17 +1714,16 @@\n rregador\n-%7D\n %22)%0A     \n@@ -1719,34 +1719,67 @@\n dor%22)%0A          \n+  \n-  \n+return%0A        print(f%22Removido %7B\n self.__carregado\n@@ -1771,39 +1771,35 @@\n elf.__carregador\n- = None\n+%7D%22)\n %0A        else:%0A \n@@ -1795,43 +1795,15 @@\n     \n+s\n el\n-se:%0A            print(%22fail: Sem \n+f.__\n carr\n@@ -1808,18 +1808,23 @@\n rregador\n-%22)\n+ = None\n %0A%0A    de\n@@ -1825,22 +1825,21 @@\n     def \n-turnOn\n+ligar\n (self):%0A\n@@ -2028,23 +2028,24 @@\n     def \n-turnOff\n+desligar\n (self):%0A\n@@ -2085,17 +2085,18 @@\n   def us\n-e\n+ar\n (self, t\n@@ -2193,17 +2193,103 @@\n  return%0A\n-%0A\n+        tempo_total = 0%0A        descarregou = False%0A        for t in range(tempo):%0A    \n         \n@@ -2310,20 +2310,16 @@\n ria and \n-not \n self.__c\n@@ -2345,15 +2345,11 @@\n     \n-gasto =\n+   \n  sel\n@@ -2364,60 +2364,52 @@\n ria.\n-usar(tempo)%0A            self.__tempo_ligado += gasto\n+carregar(1, self.__carregador.getPotencia())\n %0A   \n@@ -2421,24 +2421,27 @@\n     \n+el\n if \n-gasto %3C tempo\n+self.__bateria\n :%0A  \n@@ -2458,168 +2458,89 @@\n     \n-print(%22fail: descarregou%22)%0A                self.__ligado = False%0A        elif self.__bateria and self.__carregador:%0A            # notebook em uso com \n+tempo_usado, descarregou = self.__bateria.usar(1)%0A                if des\n carreg\n-ador\n+ou:\n %0A   \n@@ -2552,72 +2552,45 @@\n     \n-self.__bateria.carregar(tempo, self.__carregador.getPotencia())%0A\n+        print(%22fail: descarregou%22)%0A  \n     \n@@ -2601,36 +2601,35 @@\n     \n+      \n self.__\n-tempo_\n ligado \n-+\n = \n-tempo\n+False\n %0A   \n@@ -2625,38 +2625,32 @@\n = False%0A        \n-else:%0A\n             # s%C3%B3\n@@ -2649,28 +2649,43 @@\n     \n-# s%C3%B3 carregador%0A    \n+break%0A            tempo_total += 1%0A\n     \n@@ -2716,16 +2716,22 @@\n += tempo\n+_total\n %0A%0A    de\n@@ -2756,73 +2756,15 @@\n     \n-status = %22ligado%22 if self.__ligado else %22desligado%22%0A        s\n+info\n  = \n-f\n %22Not\n@@ -2774,16 +2774,8 @@\n ok: \n-%7Bstatus%7D\n %22%0A  \n@@ -2810,23 +2810,32 @@\n         \n-s\n+info\n  += f%22\n+ligado\n  por %7Bse\n@@ -2858,16 +2858,62 @@\n o%7D min%22%0A\n+        else:%0A            info += %22desligado%22%0A\n         \n@@ -2938,33 +2938,36 @@\n or:%0A            \n-s\n+info\n  += f%22, Carregad\n@@ -3029,17 +3029,20 @@\n         \n-s\n+info\n  += f%22, \n@@ -3081,17 +3081,20 @@\n   print(\n-s\n+info\n )%0A%0A%0Adef \n@@ -3106,23 +3106,17 @@\n ):%0A    n\n-otebook\n+b\n  = Noteb\n@@ -3149,25 +3149,35 @@\n     \n-try:%0A    \n+print(%22$%22, end=%22%22)%0A\n         \n cmd \n@@ -3172,19 +3172,20 @@\n         \n-cmd\n+line\n  = input\n@@ -3185,19 +3185,16 @@\n = input(\n-%22$%22\n ).strip(\n@@ -3199,51 +3199,8 @@\n p()%0A\n-        except EOFError:%0A            break%0A\n     \n@@ -3210,19 +3210,20 @@\n  if not \n-cmd\n+line\n :%0A      \n@@ -3249,19 +3249,18 @@\n     \n-parts = cmd\n+cmd = line\n .spl\n@@ -3264,16 +3264,17 @@\n split()%0A\n+%0A\n         \n@@ -3276,21 +3276,19 @@\n      if \n-parts\n+cmd\n %5B0%5D == %22\n@@ -3316,37 +3316,35 @@\n ak%0A        elif \n-parts\n+cmd\n %5B0%5D == %22show%22:%0A \n@@ -3355,23 +3355,17 @@\n        n\n-otebook\n+b\n .show()%0A\n@@ -3373,37 +3373,35 @@\n        elif \n-parts\n+cmd\n %5B0%5D == %22\n set_battery%22\n@@ -3392,76 +3392,70 @@\n == %22\n-set_battery%22:%0A            notebook.setBateria(Bateria(int(parts%5B1%5D))\n+turn_on%22:%0A            print(f%22$turn_on%22)%0A            nb.ligar(\n )%0A  \n@@ -3465,29 +3465,27 @@\n    elif \n-parts\n+cmd\n %5B0%5D == %22\n rm_batte\n@@ -3480,18 +3480,16 @@\n == %22\n-rm_battery\n+turn_off\n %22:%0A \n@@ -3504,25 +3504,18 @@\n    n\n-otebook.rmBateria\n+b.desligar\n ()%0A \n@@ -3526,29 +3526,27 @@\n    elif \n-parts\n+cmd\n %5B0%5D == %22\n set_char\n@@ -3541,19 +3541,11 @@\n == %22\n+u\n se\n-t_charger\n %22:%0A \n@@ -3560,53 +3560,27 @@\n    n\n-otebook.setCharger(Carregador(int(parts\n+b.usar(int(cmd\n %5B1%5D))\n-)\n %0A   \n@@ -3589,29 +3589,27 @@\n    elif \n-parts\n+cmd\n %5B0%5D == %22\n rm_charg\n@@ -3604,18 +3604,19 @@\n == %22\n-rm_charg\n+set_batt\n er\n+y\n %22:%0A \n@@ -3630,27 +3630,60 @@\n     \n-notebook.rmCharger(\n+b = Bateria(int(cmd%5B1%5D))%0A            nb.setBateria(b\n )%0A  \n@@ -3689,37 +3689,35 @@\n        elif \n-parts\n+cmd\n %5B0%5D == %22\n turn_on%22:%0A  \n@@ -3696,39 +3696,42 @@\n elif cmd%5B0%5D == %22\n-turn_on\n+rm_battery\n %22:%0A            n\n@@ -3734,22 +3734,19 @@\n    n\n-otebook.turnOn\n+b.rmBateria\n ()%0A \n@@ -3757,29 +3757,27 @@\n    elif \n-parts\n+cmd\n %5B0%5D == %22\n turn_off\n@@ -3764,32 +3764,35 @@\n  cmd%5B0%5D == %22\n-turn_off\n+set_charger\n %22:%0A         \n@@ -3798,25 +3798,66 @@\n     \n-notebook.turnOff(\n+c = Carregador(int(cmd%5B1%5D))%0A            nb.setCarregador(c\n )%0A  \n@@ -3871,21 +3871,19 @@\n lif \n-parts\n+cmd\n %5B0%5D == %22\n use%22\n@@ -3870,35 +3870,42 @@\n elif cmd%5B0%5D == %22\n-use\n+rm_charger\n %22:%0A            n\n@@ -3908,33 +3908,23 @@\n    n\n-otebook.use(int(parts%5B1%5D)\n+b.rmCarregador(\n )%0A  \n",
            "lines": "148"
        },
        {
            "label": "2025-10-25_14-09-30",
            "content": "@@ -3042,20 +3042,19 @@\n         \n-line\n+cmd\n  = input\n@@ -3054,16 +3054,19 @@\n = input(\n+%22$%22\n ).strip(\n@@ -3125,20 +3125,19 @@\n  if not \n-line\n+cmd\n :%0A      \n@@ -3155,64 +3155,8 @@\n nue%0A\n-        print(f%22$%7Bline%7D%22)  # imprime o comando digitado%0A\n     \n@@ -3171,12 +3171,11 @@\n s = \n-line\n+cmd\n .spl\n@@ -3893,17 +3893,16 @@\n ido%22)%0A%0A%0A\n-%0A\n if __nam\n",
            "lines": "138"
        },
        {
            "label": "2025-10-25_14-10-41",
            "content": "@@ -141,24 +141,31 @@\n tCarga(self)\n+ -%3E int\n :%0A        re\n@@ -206,24 +206,31 @@\n cidade(self)\n+ -%3E int\n :%0A        re\n@@ -281,168 +281,64 @@\n empo\n-):%0A        if tempo %3E= self.__carga:%0A            tempo_usado = self.__carga%0A            self.__carga = 0%0A            return tempo_usado, True%0A        else:%0A    \n+: int) -%3E int:%0A        gasto = min(self.__carga, tempo)%0A\n     \n@@ -361,18 +361,14 @@\n  -= \n-tempo%0A    \n+gasto%0A\n     \n@@ -382,20 +382,13 @@\n urn \n-tempo, False\n+gasto\n %0A%0A  \n@@ -413,16 +413,21 @@\n f, tempo\n+: int\n , potenc\n@@ -428,16 +428,21 @@\n potencia\n+: int\n ):%0A     \n@@ -461,54 +461,14 @@\n rga \n-+\n = \n-tempo * potencia%0A        if self.__carga %3E \n+min(\n self\n@@ -480,29 +480,17 @@\n pacidade\n-:%0A           \n+,\n  self.__\n@@ -499,27 +499,27 @@\n rga \n-= self.__capacidade\n++ tempo * potencia)\n %0A%0A  \n@@ -704,32 +704,39 @@\n etPotencia(self)\n+ -%3E int\n :%0A        return\n@@ -904,87 +904,122 @@\n f.__\n-bateria = None%0A        self.__carregador = None%0A        self.__tempo_ligado = 0\n+tempo_ligado = 0%0A        self.__bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None\n %0A%0A  \n@@ -1122,36 +1122,32 @@\n lf):%0A        if \n-not \n self.__bateria:%0A\n@@ -1168,26 +1168,35 @@\n int(\n-%22fail: Sem \n+f%22Removido %7Bself.__\n bateria\n+%7D\n %22)%0A \n@@ -1209,32 +1209,8 @@\n     \n- return None%0A        b =\n  sel\n@@ -1220,16 +1220,23 @@\n _bateria\n+ = None\n %0A       \n@@ -1240,77 +1240,52 @@\n     \n-s\n el\n-f.__bateria = None%0A        print(f%22Removido %7Bb%7D%22)%0A        return b\n+se:%0A            print(%22fail: Sem bateria%22)\n %0A%0A  \n@@ -1294,24 +1294,21 @@\n def setC\n+h\n ar\n-regado\n+ge\n r(self, \n@@ -1417,35 +1417,34 @@\n o%22)%0A        \n-    return%0A\n+else:%0A    \n         self\n@@ -1482,24 +1482,21 @@\n  def rmC\n+h\n ar\n-regado\n+ge\n r(self):\n@@ -1503,28 +1503,24 @@\n %0A        if \n-not \n self.__carre\n@@ -1534,65 +1534,8 @@\n     \n-        print(%22fail: Sem carregador%22)%0A            return%0A\n     \n@@ -1573,24 +1573,28 @@\n rregador%7D%22)%0A\n+    \n         self\n@@ -1626,64 +1626,55 @@\n     \n-if not self.__bateria:%0A            self.__ligado = False\n+else:%0A            print(%22fail: Sem carregador%22)\n %0A%0A  \n@@ -1679,21 +1679,22 @@\n     def \n-ligar\n+turnOn\n (self):%0A\n@@ -1883,24 +1883,23 @@\n     def \n-desligar\n+turnOff\n (self):%0A\n@@ -1931,34 +1931,33 @@\n alse%0A%0A    def us\n-ar\n+e\n (self, tempo: in\n@@ -2050,38 +2050,8 @@\n urn%0A\n-        for t in range(tempo):\n %0A   \n@@ -2051,28 +2051,24 @@\n rn%0A%0A        \n-    \n if self.__ba\n@@ -2073,24 +2073,28 @@\n bateria and \n+not \n self.__carre\n@@ -2104,35 +2104,39 @@\n or:%0A            \n-   \n+gasto =\n  self.__bateria.\n@@ -2139,52 +2139,60 @@\n ria.\n-carregar(1, self.__carregador.getPotencia())\n+usar(tempo)%0A            self.__tempo_ligado += gasto\n %0A   \n@@ -2204,27 +2204,24 @@\n     \n-el\n if \n-self.__bateria\n+gasto %3C tempo\n :%0A  \n@@ -2238,79 +2238,168 @@\n     \n-_, descarregou = self.__bateria.usar(1)%0A                if des\n+print(%22fail: descarregou%22)%0A                self.__ligado = False%0A        elif self.__bateria and self.__carregador:%0A            # notebook em uso com \n carreg\n-ou:\n+ador\n %0A   \n@@ -2411,51 +2411,72 @@\n     \n-        print(%22fail: descarregou%22)%0A        \n+self.__bateria.carregar(tempo, self.__carregador.getPotencia())%0A\n     \n@@ -2486,38 +2486,45 @@\n      self.__\n+tempo_\n ligado \n++\n = \n-False\n+tempo\n %0A           \n@@ -2512,32 +2512,38 @@\n = tempo%0A        \n+else:%0A\n             brea\n@@ -2530,38 +2530,52 @@\n se:%0A            \n-break%0A\n+# s%C3%B3 carregador%0A    \n         self.__t\n@@ -2628,15 +2628,73 @@\n     \n-info\n+status = %22ligado%22 if self.__ligado else %22desligado%22%0A        s\n  = \n+f\n %22Not\n@@ -2700,16 +2700,24 @@\n tebook: \n+%7Bstatus%7D\n %22%0A      \n@@ -2752,24 +2752,15 @@\n     \n-info\n+s\n  += f%22\n-ligado\n  por\n@@ -2791,54 +2791,8 @@\n in%22%0A\n-        else:%0A            info += %22desligado%22%0A\n     \n@@ -2821,36 +2821,33 @@\n or:%0A            \n-info\n+s\n  += f%22, Carregad\n@@ -2909,20 +2909,17 @@\n         \n-info\n+s\n  += f%22, \n@@ -2962,12 +2962,9 @@\n int(\n-info\n+s\n )%0A%0A%0A\n@@ -2980,17 +2980,23 @@\n ):%0A    n\n-b\n+otebook\n  = Noteb\n@@ -3029,27 +3029,17 @@\n     \n-print(%22$%22, end=%22%22)%0A\n+try:%0A    \n     \n@@ -3077,53 +3077,154 @@\n     \n-if not line:%0A            continue%0A        cmd\n+except EOFError:%0A            break%0A        if not line:%0A            continue%0A        print(f%22$%7Bline%7D%22)  # imprime o comando digitado%0A        parts\n  = l\n@@ -3235,17 +3235,16 @@\n split()%0A\n-%0A\n         \n@@ -3246,19 +3246,21 @@\n      if \n-cmd\n+parts\n %5B0%5D == %22\n@@ -3288,35 +3288,37 @@\n ak%0A        elif \n-cmd\n+parts\n %5B0%5D == %22show%22:%0A \n@@ -3329,17 +3329,23 @@\n        n\n-b\n+otebook\n .show()%0A\n@@ -3353,35 +3353,37 @@\n        elif \n-cmd\n+parts\n %5B0%5D == %22\n turn_on%22:%0A  \n@@ -3374,70 +3374,76 @@\n == %22\n-turn_on%22:%0A            print(f%22$turn_on%22)%0A            nb.ligar(\n+set_battery%22:%0A            notebook.setBateria(Bateria(int(parts%5B1%5D))\n )%0A  \n@@ -3453,27 +3453,29 @@\n    elif \n-cmd\n+parts\n %5B0%5D == %22\n turn_off\n@@ -3470,142 +3470,52 @@\n == %22\n-turn_off%22:%0A            nb.desligar()%0A        elif cmd%5B0%5D == %22use%22:%0A            print(f%22$use %7Bcmd%5B1%5D%7D%22)%0A            nb.usar(int(cmd%5B1%5D)\n+rm_battery%22:%0A            notebook.rmBateria(\n )%0A  \n@@ -3517,35 +3517,37 @@\n ()%0A        elif \n-cmd\n+parts\n %5B0%5D == %22set_batt\n@@ -3534,39 +3534,39 @@\n arts%5B0%5D == %22set_\n-batt\n+charg\n er\n-y\n %22:%0A            p\n@@ -3568,104 +3568,53 @@\n     \n-print(f%22$set_battery %7Bcmd%5B1%5D%7D%22)%0A            b = Bateria(int(cmd%5B1%5D))%0A            nb.setBateria(b\n+notebook.setCharger(Carregador(int(parts%5B1%5D))\n )%0A  \n@@ -3616,35 +3616,37 @@\n ))%0A        elif \n-cmd\n+parts\n %5B0%5D == %22rm_batte\n@@ -3632,39 +3632,39 @@\n parts%5B0%5D == %22rm_\n-batt\n+charg\n er\n-y\n %22:%0A            p\n@@ -3666,54 +3666,26 @@\n     \n-print(f%22$rm_battery%22)%0A            nb.rmBateria\n+notebook.rmCharger\n ()%0A \n@@ -3696,27 +3696,29 @@\n    elif \n-cmd\n+parts\n %5B0%5D == %22\n set_char\n@@ -3705,35 +3705,31 @@\n arts%5B0%5D == %22\n-set_charger\n+turn_on\n %22:%0A         \n@@ -3735,110 +3735,92 @@\n     \n-print(f%22$set_charger %7Bcmd%5B1%5D%7D%22)%0A            c = Carregador(int(cmd%5B1%5D))%0A            nb.setCarregador(c\n+notebook.turnOn()%0A        elif parts%5B0%5D == %22turn_off%22:%0A            notebook.turnOff(\n )%0A  \n@@ -3834,19 +3834,21 @@\n lif \n-cmd\n+parts\n %5B0%5D == %22\n rm_c\n@@ -3839,34 +3839,27 @@\n arts%5B0%5D == %22\n-rm_charger\n+use\n %22:%0A         \n@@ -3865,58 +3865,34 @@\n     \n-print(f%22$rm_charger%22)%0A            nb.rmCarregador(\n+notebook.use(int(parts%5B1%5D)\n )%0A  \n@@ -3949,16 +3949,17 @@\n ido%22)%0A%0A%0A\n+%0A\n if __nam\n",
            "lines": "140"
        },
        {
            "label": "2025-10-25_14-24-04",
            "content": "@@ -2,20 +2,20 @@\n lass Bat\n-t\n er\n-y\n+ia\n :%0A    de\n@@ -29,34 +29,36 @@\n t__(self, capaci\n-ty\n+dade\n : int):%0A        \n@@ -70,18 +70,20 @@\n __capaci\n-ty\n+dade\n  = capac\n@@ -83,18 +83,20 @@\n = capaci\n-ty\n+dade\n %0A       \n@@ -104,21 +104,20 @@\n self.__c\n-h\n arg\n-e\n+a\n  = capac\n@@ -113,26 +113,28 @@\n rga = capaci\n-ty\n+dade\n %0A%0A    def us\n@@ -131,38 +131,87 @@\n     def \n-use(self, minutes: int\n+getCarga(self):%0A        return self.__carga%0A%0A    def getCapacidade(self\n ):%0A     \n@@ -209,32 +209,39 @@\n f):%0A        \n+return \n self.__c\n harge -= min\n@@ -232,24 +232,45 @@\n .__c\n-harge -= minutes\n+apacidade%0A%0A    def usar(self, tempo):\n %0A   \n@@ -268,32 +268,41 @@\n mpo):%0A        if\n+ tempo %3E=\n  self.__charge %3C\n@@ -298,19 +298,52 @@\n .__c\n-h\n arg\n-e %3C= 0:\n+a:%0A            tempo_usado = self.__carga\n %0A   \n@@ -359,21 +359,20 @@\n self.__c\n-h\n arg\n-e\n+a\n  = 0%0A   \n@@ -387,22 +387,86 @@\n  return \n-False%0A\n+tempo_usado, True%0A        else:%0A            self.__carga -= tempo%0A    \n         \n@@ -472,19 +472,27 @@\n  return \n-Tru\n+tempo, Fals\n e%0A%0A    d\n@@ -499,44 +499,37 @@\n ef c\n-h\n ar\n-ge\n+regar\n (self, \n-power: int, minutes: int\n+tempo, potencia\n ):%0A \n@@ -547,32 +547,32 @@\n .__c\n-h\n arg\n-e\n+a\n  += \n-power * minutes\n+tempo * potencia\n %0A   \n@@ -587,21 +587,20 @@\n self.__c\n-h\n arg\n-e\n+a\n  %3E self.\n@@ -607,18 +607,20 @@\n __capaci\n-ty\n+dade\n :%0A      \n@@ -633,21 +633,20 @@\n self.__c\n-h\n arg\n-e\n+a\n  = self.\n@@ -653,18 +653,20 @@\n __capaci\n-ty\n+dade\n %0A%0A    de\n@@ -703,16 +703,8 @@\n n f%22\n-Bateria \n %7Bsel\n@@ -708,21 +708,20 @@\n self.__c\n-h\n arg\n-e\n+a\n %7D/%7Bself.\n@@ -732,128 +732,14 @@\n paci\n-ty%7D%22%0A%0A    def get_charge(self):%0A        return self.__charge%0A%0A    def get_capacity(self):%0A        return self.__capacity\n+dade%7D%22\n %0A%0A%0Ac\n@@ -744,21 +744,24 @@\n %0Aclass C\n-h\n ar\n-ge\n+regado\n r:%0A    d\n@@ -772,35 +772,38 @@\n _init__(self, po\n-wer\n+tencia\n : int):%0A        \n@@ -815,19 +815,25 @@\n __po\n-wer = power\n+tencia = potencia\n %0A%0A  \n@@ -841,22 +841,24 @@\n  def get\n-_power\n+Potencia\n (self):%0A\n@@ -881,19 +881,22 @@\n elf.__po\n-wer\n+tencia\n %0A%0A    de\n@@ -933,19 +933,8 @@\n n f%22\n-Carregador \n %7Bsel\n@@ -939,19 +939,22 @@\n elf.__po\n-wer\n+tencia\n %7DW%22%0A%0A%0Acl\n@@ -998,34 +998,38 @@\n %0A        self.__\n+ligad\n o\n-n\n  = False%0A       \n@@ -1040,19 +1040,22 @@\n f.__\n-time_on = 0\n+bateria = None\n %0A   \n@@ -1058,39 +1058,42 @@\n %0A        self.__\n-battery\n+carregador\n  = None%0A        \n@@ -1103,44 +1103,67 @@\n f.__\n-charger = None%0A%0A    def turn_on(self\n+tempo_ligado = 0%0A%0A    def setBateria(self, bateria: Bateria\n ):%0A \n@@ -1173,40 +1173,58 @@\n     \n-if \n self.__\n-on:%0A            return\n+bateria = bateria%0A%0A    def rmBateria(self):\n %0A   \n@@ -1231,17 +1231,20 @@\n      if \n-(\n+not \n self.__b\n@@ -1249,79 +1249,85 @@\n _bat\n-t\n er\n-y and self.__\n+ia:%0A            print(%22fail: Sem \n bat\n-t\n er\n-y.get_charge() %3E 0) or self.__charger:%0A  \n+ia%22)%0A            return None%0A\n         \n   se\n@@ -1318,33 +1318,35 @@\n one%0A        \n- \n+b =\n  self.__\n on = True%0A  \n@@ -1337,17 +1337,15 @@\n f.__\n-on = True\n+bateria\n %0A   \n@@ -1353,114 +1353,77 @@\n     \n+s\n el\n-se:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar\n+f.__bateria = None%0A        print(f%22Removido %7Bb%7D\n %22)%0A\n-%0A\n     \n-def turn_off(self):%0A        self.__on = False\n+    return b\n %0A%0A  \n@@ -1432,30 +1432,50 @@\n def \n-u\n se\n-(self, minutes: int\n+tCarregador(self, carregador: Carregador\n ):%0A \n@@ -1488,21 +1488,25 @@\n  if \n-not \n self.__\n-on\n+carregador\n :%0A  \n@@ -1528,22 +1528,36 @@\n (%22fail: \n-deslig\n+carregador j%C3%A1 conect\n ado%22)%0A  \n@@ -1573,25 +1573,24 @@\n  return%0A\n-%0A\n         \n if self.\n@@ -1585,60 +1585,76 @@\n     \n-if \n self.__\n-battery and not self.__charger:%0A  \n+carregador = carregador%0A%0A    def rmCarregador(self):%0A\n         \n   if\n@@ -1645,26 +1645,24 @@\n f):%0A        \n-  \n if not self.\n@@ -1667,34 +1667,20 @@\n f.__\n-battery.use(minutes):%0A    \n+carregador:%0A\n     \n@@ -1704,19 +1704,22 @@\n il: \n-des\n+Sem \n carreg\n-ou\n+ador\n %22)%0A \n@@ -1733,53 +1733,61 @@\n     \n-    self.__on = False%0A                return%0A\n+return%0A        print(f%22Removido %7Bself.__carregador%7D%22)\n %0A   \n@@ -1795,21 +1795,16 @@\n     \n-elif \n self.__c\n harg\n@@ -1803,18 +1803,35 @@\n .__c\n-h\n ar\n-ger and\n+regador = None%0A        if\n  not\n@@ -1833,36 +1833,36 @@\n f not self.__bat\n-t\n er\n-y\n+ia\n :%0A            pa\n@@ -1863,36 +1863,51 @@\n     \n-pass  # usa indefinidamente%0A\n+self.__ligado = False%0A%0A    def ligar(self):\n %0A   \n@@ -1911,21 +1911,20 @@\n         \n-el\n if \n+(\n self.__b\n@@ -1925,20 +1925,20 @@\n lf.__bat\n-t\n er\n-y\n+ia\n  and sel\n@@ -1945,88 +1945,86 @@\n f.__\n-charger:%0A            self.__battery.charge(self.__charger.get_power(), minutes)%0A\n+bateria.getCarga() %3E 0) or self.__carregador:%0A            self.__ligado = True\n %0A   \n@@ -2063,141 +2063,113 @@\n il: \n-sem energia\n+n%C3%A3o foi poss%C3%ADvel ligar\n %22)%0A\n+%0A\n     \n-        self.__on = False%0A            return%0A%0A        self.__time_on += minutes%0A%0A    def set_battery(self, capacity\n+def desligar(self):%0A        self.__ligado = False%0A%0A    def usar(self, tempo\n : in\n@@ -2187,34 +2187,25 @@\n  if \n+not \n self.__\n-battery is not None\n+ligado\n :%0A  \n@@ -2231,28 +2231,17 @@\n il: \n-bateria j%C3%A1 conectada\n+desligado\n %22)%0A \n@@ -2270,70 +2270,35 @@\n     \n-self.__battery = Battery(capacity)%0A%0A    def rm_battery(self):%0A\n+for t in range(tempo):%0A    \n     \n@@ -2318,106 +2318,52 @@\n _bat\n-t\n er\n-y is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7B\n+ia and self.__carregador:%0A                \n self\n@@ -2372,111 +2372,57 @@\n _bat\n-t\n er\n-y%7D%22)%0A        self.__battery = None%0A        self.__on = False%0A%0A    def set_charger(self, power: int):\n+ia.carregar(1, self.__carregador.getPotencia())\n %0A   \n@@ -2418,32 +2418,38 @@\n ncia())%0A        \n+    el\n if self.__charge\n@@ -2446,201 +2446,107 @@\n f.__\n-charger is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__charger = Charger(power)%0A%0A    def rm_charger(self):%0A        if self.__charger is None:%0A\n+bateria:%0A                _, descarregou = self.__bateria.usar(1)%0A                if descarregou:%0A  \n     \n@@ -2545,32 +2545,38 @@\n :%0A              \n+      \n print(%22fail: Sem\n@@ -2568,38 +2568,35 @@\n rint(%22fail: \n-Sem \n+des\n carreg\n-ador\n+ou\n %22)%0A         \n@@ -2594,39 +2594,32 @@\n             \n-return%0A\n         \n print(f%22Remo\n@@ -2610,112 +2610,92 @@\n     \n-print(f%22Removido %7Bself.__charger.get_power()%7DW%22)%0A        self.__charger = None%0A        self.__on = False\n+self.__ligado = False%0A                    break%0A        self.__tempo_ligado += tempo\n %0A%0A  \n@@ -2724,18 +2724,27 @@\n     \n-parts = %5B%5D\n+info = %22Notebook: %22\n %0A   \n@@ -2758,18 +2758,22 @@\n  self.__\n+ligad\n o\n-n\n :%0A      \n@@ -2782,33 +2782,18 @@\n     \n-parts.append(f%22Notebook: \n+info += f%22\n liga\n@@ -2812,21 +2812,25 @@\n .__t\n-ime_on\n+empo_ligado\n %7D min%22\n-)\n %0A   \n@@ -2856,32 +2856,17 @@\n     \n-parts.append(%22Notebook: \n+info += %22\n desl\n@@ -2863,33 +2863,32 @@\n o += %22desligado%22\n-)\n %0A        if self\n@@ -2891,21 +2891,24 @@\n self.__c\n-h\n ar\n-ge\n+regado\n r:%0A     \n@@ -2918,33 +2918,40 @@\n     \n-parts.append(str(\n+info += f%22, Carregador %7B\n self.__c\n harg\n@@ -2950,16 +2950,19 @@\n .__c\n-h\n ar\n-ger))\n+regador%7D%22\n %0A   \n@@ -2979,20 +2979,20 @@\n lf.__bat\n-t\n er\n-y\n+ia\n :%0A      \n@@ -3001,25 +3001,29 @@\n     \n-parts.append(str(\n+info += f%22, Bateria %7B\n self\n@@ -3032,14 +3032,14 @@\n _bat\n-t\n er\n-y))\n+ia%7D%22\n %0A   \n@@ -3053,24 +3053,12 @@\n int(\n-%22, %22.join(parts)\n+info\n )%0A%0A%0A\n@@ -3089,17 +3089,16 @@\n ebook()%0A\n-%0A\n     whil\n@@ -3117,810 +3117,1027 @@\n     \n-try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A        if not line:%0A            continue%0A%0A        print(f%22$%7Bline%7D%22)%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A%0A        if cmd == %22end%22:%0A            break%0A        elif cmd == %22show%22:%0A            nb.show()%0A        elif cmd == %22turn_on%22:%0A            nb.turn_on()%0A        elif cmd == %22turn_off%22:%0A            nb.turn_off()%0A        elif cmd == %22use%22:%0A            nb.use(int(parts%5B1%5D))%0A        elif cmd == %22set_charger%22:%0A            nb.set_charger(int(parts%5B1%5D))%0A        elif cmd == %22rm_charger%22:%0A            nb.rm_charger()%0A        elif cmd == %22set_battery%22:%0A            nb.set_battery(int(parts%5B1%5D))%0A        elif cmd == %22rm_battery%22:%0A            nb.rm_battery()%0A        else:%0A            print(%22fail: comando inv%C3%A1\n+print(%22$%22, end=%22%22)%0A        line = input().strip()%0A        if not line:%0A            continue%0A        cmd = line.split()%0A%0A        if cmd%5B0%5D == %22end%22:%0A            break%0A        elif cmd%5B0%5D == %22show%22:%0A            nb.show()%0A        elif cmd%5B0%5D == %22turn_on%22:%0A            print(f%22$turn_on%22)%0A            nb.ligar()%0A        elif cmd%5B0%5D == %22turn_off%22:%0A            nb.desligar()%0A        elif cmd%5B0%5D == %22use%22:%0A            print(f%22$use %7Bcmd%5B1%5D%7D%22)%0A            nb.usar(int(cmd%5B1%5D))%0A        elif cmd%5B0%5D == %22set_battery%22:%0A            print(f%22$set_battery %7Bcmd%5B1%5D%7D%22)%0A            b = Bateria(int(cmd%5B1%5D))%0A            nb.setBateria(b)%0A        elif cmd%5B0%5D == %22rm_battery%22:%0A            print(f%22$rm_battery%22)%0A            nb.rmBateria()%0A        elif cmd%5B0%5D == %22set_charger%22:%0A            print(f%22$set_charger %7Bcmd%5B1%5D%7D%22)%0A            c = Carregador(int(cmd%5B1%5D))%0A            nb.setCarregador(c)%0A        elif cmd%5B0%5D == %22rm_charger%22:%0A            print(f%22$rm_charger%22)%0A            nb.rmCarregador()%0A        else:%0A            print(%22fail: comando inva\n lido\n",
            "lines": "152"
        },
        {
            "label": "2025-10-25_14-30-16",
            "content": "@@ -507,16 +507,24 @@\n eturn f%22\n+Bateria \n %7Bself.__\n",
            "lines": "160"
        },
        {
            "label": "2025-10-25_14-33-41",
            "content": "@@ -507,17 +507,16 @@\n eturn f%22\n- \n %7Bself.__\n",
            "lines": "160"
        },
        {
            "label": "2025-10-25_14-33-46",
            "content": "@@ -511,15 +511,8 @@\n n f%22\n-Bateria\n  %7Bse\n",
            "lines": "160"
        },
        {
            "label": "2025-10-25_14-34-09",
            "content": "@@ -2340,53 +2340,8 @@\n tery\n-.get_charge()%7D/%7Bself.__battery.get_capacity()\n %7D%22)%0A\n",
            "lines": "160"
        },
        {
            "label": "2025-10-25_14-36-51",
            "content": "@@ -35,3635 +35,4120 @@\n lf, \n-max_charge: int):%0A        self.max_charge = max_charge%0A        self.charge = max_charge%0A%0A    def use(self, amount: int):%0A        if self.charge == 0:%0A            return False%0A        self.charge = max(0, self.charge - amount)%0A        return True%0A%0A    def charge_up(self, watts: int, minutes: int):%0A        self.charge = min(self.max_charge, self.charge + watts * minutes)%0A%0A%0Aclass Charger:%0A    def __init__(self, watts: int):%0A        self.watts = watts%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.battery = None%0A        self.charger = None%0A        self.on = False%0A        self.time = 0  # minutos ligado%0A%0A    def set_battery(self, max_charge: int):%0A        self.battery = Battery(max_charge)%0A%0A    def rm_battery(self):%0A        if self.battery is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.battery.charge%7D/%7Bself.battery.max_charge%7D%22)%0A        self.battery = None%0A        # %E2%9C%85 Desliga apenas se n%C3%A3o houver carregador%0A        if self.charger is None:%0A            self.on = False%0A%0A    def set_charger(self, watts: int):%0A        self.charger = Charger(watts)%0A%0A    def rm_charger(self):%0A        if self.charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido Carregador %7Bself.charger.watts%7DW%22)%0A        self.charger = None%0A        # %E2%9A%A0%EF%B8%8F Se estava ligado s%C3%B3 pela energia do carregador (sem bateria)%0A        if self.battery is None:%0A            self.on = False%0A%0A    def turn_on(self):%0A        if self.on:%0A            print(%22fail: Notebook j%C3%A1 est%C3%A1 ligado%22)%0A            return%0A        if self.battery is None and self.charger is None:%0A            print(%22fail: Sem energia para ligar%22)%0A            return%0A        if self.battery is not None and self.battery.charge == 0 and self.charger is None:%0A            print(%22fail: Bateria descarregada%22)%0A            return%0A        self.on = True%0A%0A    def turn_off(self):%0A        if not self.on:%0A            print(%22fail: Notebook j%C3%A1 est%C3%A1 desligado%22)%0A            return%0A        self.on = False%0A%0A    def use(self, minutes: int):%0A        if not self.on:%0A            print(%22fail: Notebook desligado%22)%0A            return%0A%0A        for _ in range(minutes):%0A            # consome 1 unidade de carga por minuto%0A            if self.battery is not None:%0A                if self.battery.charge %3E 0:%0A                    self.battery.charge -= 1%0A                elif self.charger is None:%0A                    # sem carga e sem carregador %E2%86%92 desliga%0A                    self.on = False%0A                    print(%22fail: Bateria acabou%22)%0A                    return%0A            elif self.charger is None:%0A                # sem bateria nem carregador %E2%86%92 desliga%0A                self.on = False%0A                print(%22fail: Sem energia%22)%0A                return%0A%0A            # carrega se houver carregador e bateria%0A            if self.charger is not None and self.battery is not None:%0A                self.battery.charge = min(%0A                    self.battery.max_charge, self.battery.charge + self.charger.watts / 60%0A                )%0A%0A            self.time += 1%0A%0A    def show(self):%0A        if not self.on:%0A            if self.charger is not None:%0A                print(f%22Notebook: desligado, Carregador %7Bself.charger.watts%7DW%22)%0A            else:%0A                print(%22Notebook: desligado%22)%0A            return%0A%0A        # ligado%0A        msg = f%22Notebook: ligado por %7Bself.time%7D min%22%0A        if self.charger is not None:%0A            msg += f%22, Carregador %7Bself.charger.watts%7DW%22%0A        if self.battery is not None:%0A            msg += f%22, Bateria %7Bint(self.battery.charge)%7D/%7Bself.battery.max_charge%7D%22%0A        print(msg\n+capacity: int):%0A        self.__capacity = capacity%0A        self.__charge = capacity%0A%0A    def use(self, minutes: int):%0A        self.__charge -= minutes%0A        if self.__charge %3C= 0:%0A            self.__charge = 0%0A            return False%0A        return True%0A%0A    def charge(self, power: int, minutes: int):%0A        self.__charge += power * minutes%0A        if self.__charge %3E self.__capacity:%0A            self.__charge = self.__capacity%0A%0A    def __str__(self):%0A        return f%22Bateria %7Bself.__charge%7D/%7Bself.__capacity%7D%22%0A%0A    def get_charge(self):%0A        return self.__charge%0A%0A    def get_capacity(self):%0A        return self.__capacity%0A%0A%0Aclass Charger:%0A    def __init__(self, power: int):%0A        self.__power = power%0A%0A    def get_power(self):%0A        return self.__power%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.__power%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__on = False%0A        self.__time_on = 0%0A        self.__battery = None%0A        self.__charger = None%0A%0A    def turn_on(self):%0A        if self.__on:%0A            return%0A        if (self.__battery and self.__battery.get_charge() %3E 0) or self.__charger:%0A            self.__on = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def turn_off(self):%0A        self.__on = False%0A%0A    def use(self, minutes: int):%0A        if not self.__on:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        if self.__battery and not self.__charger:%0A            if not self.__battery.use(minutes):%0A                print(%22fail: descarregou%22)%0A                self.__on = False%0A                return%0A%0A        elif self.__charger and not self.__battery:%0A            pass  # usa indefinidamente%0A%0A        elif self.__battery and self.__charger:%0A            self.__battery.charge(self.__charger.get_power(), minutes)%0A%0A        else:%0A            print(%22fail: sem energia%22)%0A            self.__on = False%0A            return%0A%0A        self.__time_on += minutes%0A%0A    def set_battery(self, capacity: int):%0A        if self.__battery is not None:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.__battery = Battery(capacity)%0A%0A    def rm_battery(self):%0A        if self.__battery is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__battery.get_charge()%7D/%7Bself.__battery.get_capacity()%7D%22)%0A        self.__battery = None%0A        self.__on = False%0A%0A    def set_charger(self, power: int):%0A        if self.__charger is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__charger = Charger(power)%0A%0A    def rm_charger(self):%0A        if self.__charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__charger.get_power()%7DW%22)%0A        self.__charger = None%0A        self.__on = False%0A%0A    def show(self):%0A        parts = %5B%5D%0A        if self.__on:%0A            parts.append(f%22Notebook: ligado por %7Bself.__time_on%7D min%22)%0A        else:%0A            parts.append(%22Notebook: desligado%22)%0A        if self.__charger:%0A            parts.append(str(self.__charger))%0A        if self.__battery:%0A            parts.append(str(self.__battery))%0A        print(%22, %22.join(parts))%0A%0A%0Adef main():%0A    nb = Notebook()%0A%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A        if not line:%0A            continue%0A%0A        print(f%22$%7Bline%7D%22)%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A%0A        if cmd == %22end%22:%0A            break%0A        elif cmd == %22show%22:%0A            nb.show()%0A        elif cmd == %22turn_on%22:%0A            nb.turn_on()%0A        elif cmd == %22turn_off%22:%0A            nb.turn_off()%0A        elif cmd == %22use%22:%0A            nb.use(int(parts%5B1%5D))%0A        elif cmd == %22set_charger%22:%0A            nb.set_charger(int(parts%5B1%5D))%0A        elif cmd == %22rm_charger%22:%0A            nb.rm_charger()%0A        elif cmd == %22set_battery%22:%0A            nb.set_battery(int(parts%5B1%5D))%0A        elif cmd == %22rm_battery%22:%0A            nb.rm_battery()%0A        else:%0A            print(%22fail: comando inv%C3%A1lido%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main(\n )%0A\n",
            "lines": "160"
        },
        {
            "label": "2025-10-25_14-40-52",
            "content": "@@ -35,4120 +35,3635 @@\n lf, \n-capacity: int):%0A        self.__capacity = capacity%0A        self.__charge = capacity%0A%0A    def use(self, minutes: int):%0A        self.__charge -= minutes%0A        if self.__charge %3C= 0:%0A            self.__charge = 0%0A            return False%0A        return True%0A%0A    def charge(self, power: int, minutes: int):%0A        self.__charge += power * minutes%0A        if self.__charge %3E self.__capacity:%0A            self.__charge = self.__capacity%0A%0A    def __str__(self):%0A        return f%22Bateria %7Bself.__charge%7D/%7Bself.__capacity%7D%22%0A%0A    def get_charge(self):%0A        return self.__charge%0A%0A    def get_capacity(self):%0A        return self.__capacity%0A%0A%0Aclass Charger:%0A    def __init__(self, power: int):%0A        self.__power = power%0A%0A    def get_power(self):%0A        return self.__power%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.__power%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__on = False%0A        self.__time_on = 0%0A        self.__battery = None%0A        self.__charger = None%0A%0A    def turn_on(self):%0A        if self.__on:%0A            return%0A        if (self.__battery and self.__battery.get_charge() %3E 0) or self.__charger:%0A            self.__on = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def turn_off(self):%0A        self.__on = False%0A%0A    def use(self, minutes: int):%0A        if not self.__on:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        if self.__battery and not self.__charger:%0A            if not self.__battery.use(minutes):%0A                print(%22fail: descarregou%22)%0A                self.__on = False%0A                return%0A%0A        elif self.__charger and not self.__battery:%0A            pass  # usa indefinidamente%0A%0A        elif self.__battery and self.__charger:%0A            self.__battery.charge(self.__charger.get_power(), minutes)%0A%0A        else:%0A            print(%22fail: sem energia%22)%0A            self.__on = False%0A            return%0A%0A        self.__time_on += minutes%0A%0A    def set_battery(self, capacity: int):%0A        if self.__battery is not None:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.__battery = Battery(capacity)%0A%0A    def rm_battery(self):%0A        if self.__battery is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__battery.get_charge()%7D/%7Bself.__battery.get_capacity()%7D%22)%0A        self.__battery = None%0A        self.__on = False%0A%0A    def set_charger(self, power: int):%0A        if self.__charger is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__charger = Charger(power)%0A%0A    def rm_charger(self):%0A        if self.__charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__charger.get_power()%7DW%22)%0A        self.__charger = None%0A        self.__on = False%0A%0A    def show(self):%0A        parts = %5B%5D%0A        if self.__on:%0A            parts.append(f%22Notebook: ligado por %7Bself.__time_on%7D min%22)%0A        else:%0A            parts.append(%22Notebook: desligado%22)%0A        if self.__charger:%0A            parts.append(str(self.__charger))%0A        if self.__battery:%0A            parts.append(str(self.__battery))%0A        print(%22, %22.join(parts))%0A%0A%0Adef main():%0A    nb = Notebook()%0A%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A        if not line:%0A            continue%0A%0A        print(f%22$%7Bline%7D%22)%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A%0A        if cmd == %22end%22:%0A            break%0A        elif cmd == %22show%22:%0A            nb.show()%0A        elif cmd == %22turn_on%22:%0A            nb.turn_on()%0A        elif cmd == %22turn_off%22:%0A            nb.turn_off()%0A        elif cmd == %22use%22:%0A            nb.use(int(parts%5B1%5D))%0A        elif cmd == %22set_charger%22:%0A            nb.set_charger(int(parts%5B1%5D))%0A        elif cmd == %22rm_charger%22:%0A            nb.rm_charger()%0A        elif cmd == %22set_battery%22:%0A            nb.set_battery(int(parts%5B1%5D))%0A        elif cmd == %22rm_battery%22:%0A            nb.rm_battery()%0A        else:%0A            print(%22fail: comando inv%C3%A1lido%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main(\n+max_charge: int):%0A        self.max_charge = max_charge%0A        self.charge = max_charge%0A%0A    def use(self, amount: int):%0A        if self.charge == 0:%0A            return False%0A        self.charge = max(0, self.charge - amount)%0A        return True%0A%0A    def charge_up(self, watts: int, minutes: int):%0A        self.charge = min(self.max_charge, self.charge + watts * minutes)%0A%0A%0Aclass Charger:%0A    def __init__(self, watts: int):%0A        self.watts = watts%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.battery = None%0A        self.charger = None%0A        self.on = False%0A        self.time = 0  # minutos ligado%0A%0A    def set_battery(self, max_charge: int):%0A        self.battery = Battery(max_charge)%0A%0A    def rm_battery(self):%0A        if self.battery is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.battery.charge%7D/%7Bself.battery.max_charge%7D%22)%0A        self.battery = None%0A        # %E2%9C%85 Desliga apenas se n%C3%A3o houver carregador%0A        if self.charger is None:%0A            self.on = False%0A%0A    def set_charger(self, watts: int):%0A        self.charger = Charger(watts)%0A%0A    def rm_charger(self):%0A        if self.charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido Carregador %7Bself.charger.watts%7DW%22)%0A        self.charger = None%0A        # %E2%9A%A0%EF%B8%8F Se estava ligado s%C3%B3 pela energia do carregador (sem bateria)%0A        if self.battery is None:%0A            self.on = False%0A%0A    def turn_on(self):%0A        if self.on:%0A            print(%22fail: Notebook j%C3%A1 est%C3%A1 ligado%22)%0A            return%0A        if self.battery is None and self.charger is None:%0A            print(%22fail: Sem energia para ligar%22)%0A            return%0A        if self.battery is not None and self.battery.charge == 0 and self.charger is None:%0A            print(%22fail: Bateria descarregada%22)%0A            return%0A        self.on = True%0A%0A    def turn_off(self):%0A        if not self.on:%0A            print(%22fail: Notebook j%C3%A1 est%C3%A1 desligado%22)%0A            return%0A        self.on = False%0A%0A    def use(self, minutes: int):%0A        if not self.on:%0A            print(%22fail: Notebook desligado%22)%0A            return%0A%0A        for _ in range(minutes):%0A            # consome 1 unidade de carga por minuto%0A            if self.battery is not None:%0A                if self.battery.charge %3E 0:%0A                    self.battery.charge -= 1%0A                elif self.charger is None:%0A                    # sem carga e sem carregador %E2%86%92 desliga%0A                    self.on = False%0A                    print(%22fail: Bateria acabou%22)%0A                    return%0A            elif self.charger is None:%0A                # sem bateria nem carregador %E2%86%92 desliga%0A                self.on = False%0A                print(%22fail: Sem energia%22)%0A                return%0A%0A            # carrega se houver carregador e bateria%0A            if self.charger is not None and self.battery is not None:%0A                self.battery.charge = min(%0A                    self.battery.max_charge, self.battery.charge + self.charger.watts / 60%0A                )%0A%0A            self.time += 1%0A%0A    def show(self):%0A        if not self.on:%0A            if self.charger is not None:%0A                print(f%22Notebook: desligado, Carregador %7Bself.charger.watts%7DW%22)%0A            else:%0A                print(%22Notebook: desligado%22)%0A            return%0A%0A        # ligado%0A        msg = f%22Notebook: ligado por %7Bself.time%7D min%22%0A        if self.charger is not None:%0A            msg += f%22, Carregador %7Bself.charger.watts%7DW%22%0A        if self.battery is not None:%0A            msg += f%22, Bateria %7Bint(self.battery.charge)%7D/%7Bself.battery.max_charge%7D%22%0A        print(msg\n )%0A\n",
            "lines": "115"
        },
        {
            "label": "2025-10-25_14-41-33",
            "content": "@@ -2199,24 +2199,28 @@\n tery(self):%0A\n+    \n     if self.\n@@ -2215,24 +2215,26 @@\n     if self.\n+__\n battery is N\n@@ -2238,32 +2238,36 @@\n s None:%0A        \n+    \n print(%22fail: Sem\n@@ -2281,32 +2281,39 @@\n a%22)%0A        \n+ \n+   \n return%0A\n-%0A\n+    \n     print(f%22\n@@ -2327,24 +2327,26 @@\n o %7Bself.\n+__\n battery.\n charge%7D/\n@@ -2337,30 +2337,36 @@\n battery.\n+get_\n charge\n+()\n %7D/%7Bself.\n battery.\n@@ -2357,24 +2357,26 @@\n %7D/%7Bself.\n+__\n battery.\n max_char\n@@ -2371,26 +2371,30 @@\n ery.\n-max_charge\n+get_capacity()\n %7D%22)%0A    \n self\n@@ -2389,21 +2389,27 @@\n %7D%22)%0A    \n+  \n+  \n self.\n+__\n battery \n@@ -2418,38 +2418,8 @@\n None\n-%0A%0A    if self.charger is None:\n %0A   \n@@ -2428,16 +2428,18 @@\n    self.\n+__\n on = Fal\n@@ -2442,17 +2442,16 @@\n  False%0A%0A\n-%0A\n     def \n",
            "lines": "160"
        },
        {
            "label": "2025-10-25_14-43-25",
            "content": "@@ -2181,16 +2181,267 @@\n y)%0A%0A    \n+def rm_battery(self):%0A    if self.battery is None:%0A        print(%22fail: Sem bateria%22)%0A        return%0A%0A    print(f%22Removido %7Bself.battery.charge%7D/%7Bself.battery.max_charge%7D%22)%0A    self.battery = None%0A%0A    if self.charger is None:%0A        self.on = False%0A\n %0A%0A    de\n",
            "lines": "164"
        },
        {
            "label": "2025-10-25_14-43-46",
            "content": "@@ -2185,267 +2185,8 @@\n     \n-def rm_battery(self):%0A        if self.__battery is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__battery.get_charge()%7D/%7Bself.__battery.get_capacity()%7D%22)%0A        self.__battery = None%0A        self.__on = False\n %0A%0A  \n",
            "lines": "154"
        },
        {
            "label": "2025-10-25_14-44-08",
            "content": "@@ -27,34 +27,134 @@\n nit__(self, \n-max_charge\n+capacity: int):%0A        self.__capacity = capacity%0A        self.__charge = capacity%0A%0A    def use(self, minutes\n : int):%0A    \n@@ -166,19 +166,17 @@\n elf.\n-max\n+_\n _charge \n = ma\n@@ -171,28 +171,181 @@\n _charge \n+-\n = m\n-ax_charge\n+inutes%0A        if self.__charge %3C= 0:%0A            self.__charge = 0%0A            return False%0A        return True%0A%0A    def charge(self, power: int, minutes: int):\n %0A       \n@@ -354,3186 +354,2896 @@\n elf.\n+__\n charge \n++\n = \n-max_charge%0A%0A    def __str__(self):%0A        return f%22Bateria %7Bint(self.charge)%7D/%7Bself.max_charge%7D%22%0A%0A%0Aclass Charger:%0A    def __init__(self, watts: int):%0A        self.watts = watts%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.watts%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.on = False%0A        self.time = 0%0A        self.charger = None%0A        self.battery = None%0A%0A    def show(self):%0A        status = %22ligado%22 if self.on else %22desligado%22%0A        if self.on:%0A            msg = f%22Notebook: ligado por %7Bself.time%7D min%22%0A        else:%0A            msg = %22Notebook: desligado%22%0A%0A        parts = %5B%5D%0A        if self.charger is not None:%0A            parts.append(str(self.charger))%0A        if self.battery is not None:%0A            parts.append(str(self.battery))%0A%0A        if parts:%0A            msg += %22, %22 + %22, %22.join(parts)%0A        print(msg)%0A%0A    def set_charger(self, watts: int):%0A        if self.charger is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.charger = Charger(watts)%0A%0A    def rm_charger(self):%0A        if self.charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.charger.watts%7DW%22)%0A        self.charger = None%0A        if self.battery is None:%0A            self.on = False%0A%0A    def set_battery(self, max_charge: int):%0A        if self.battery is not None:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.battery = Battery(max_charge)%0A%0A    def rm_battery(self):%0A        if self.battery is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A%0A        print(f%22Removido %7Bint(self.battery.charge)%7D/%7Bself.battery.max_charge%7D%22)%0A        self.battery = None%0A%0A        # %E2%9C%85 se n%C3%A3o houver carregador, desliga%0A        if self.charger is None:%0A            self.on = False%0A%0A    def turn_on(self):%0A        if self.on:%0A            return%0A        if self.charger is None and (self.battery is None or self.battery.charge == 0):%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A            return%0A        self.on = True%0A%0A    def turn_off(self):%0A        self.on = False%0A%0A    def use(self, minutes: int):%0A        if not self.on:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        for _ in range(minutes):%0A            # consumo de energia%0A            if self.battery is not None:%0A                if self.battery.charge %3E 0:%0A                    self.battery.charge -= 1%0A                elif self.charger is None:%0A                    # sem bateria e sem carregador %E2%86%92 desliga%0A                    print(%22fail: descarregou%22)%0A                    self.battery.charge = 0%0A                    self.on = False%0A                    return%0A            elif self.charger is None:%0A                print(%22fail: descarregou%22)%0A                self.on = False%0A                return%0A%0A            # recarga se houver carregador e bateria%0A            if self.charger is not None and self.battery is not None:%0A                self.battery.charge += self.charger.watts%0A                if self.battery.charge %3E self.battery.max_charge:%0A                    self.battery.charge = self.battery.max_charge%0A%0A            self.time += 1\n+power * minutes%0A        if self.__charge %3E self.__capacity:%0A            self.__charge = self.__capacity%0A%0A    def __str__(self):%0A        return f%22Bateria %7Bself.__charge%7D/%7Bself.__capacity%7D%22%0A%0A    def get_charge(self):%0A        return self.__charge%0A%0A    def get_capacity(self):%0A        return self.__capacity%0A%0A%0Aclass Charger:%0A    def __init__(self, power: int):%0A        self.__power = power%0A%0A    def get_power(self):%0A        return self.__power%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.__power%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__on = False%0A        self.__time_on = 0%0A        self.__battery = None%0A        self.__charger = None%0A%0A    def turn_on(self):%0A        if self.__on:%0A            return%0A        if (self.__battery and self.__battery.get_charge() %3E 0) or self.__charger:%0A            self.__on = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def turn_off(self):%0A        self.__on = False%0A%0A    def use(self, minutes: int):%0A        if not self.__on:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        if self.__battery and not self.__charger:%0A            if not self.__battery.use(minutes):%0A                print(%22fail: descarregou%22)%0A                self.__on = False%0A                return%0A%0A        elif self.__charger and not self.__battery:%0A            pass  # usa indefinidamente%0A%0A        elif self.__battery and self.__charger:%0A            self.__battery.charge(self.__charger.get_power(), minutes)%0A%0A        else:%0A            print(%22fail: sem energia%22)%0A            self.__on = False%0A            return%0A%0A        self.__time_on += minutes%0A%0A    def set_battery(self, capacity: int):%0A        if self.__battery is not None:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.__battery = Battery(capacity)%0A%0A    def rm_battery(self):%0A        if self.__battery is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__battery.get_charge()%7D/%7Bself.__battery.get_capacity()%7D%22)%0A        self.__battery = None%0A        self.__on = False%0A%0A    def set_charger(self, power: int):%0A        if self.__charger is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__charger = Charger(power)%0A%0A    def rm_charger(self):%0A        if self.__charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__charger.get_power()%7DW%22)%0A        self.__charger = None%0A        self.__on = False%0A%0A    def show(self):%0A        parts = %5B%5D%0A        if self.__on:%0A            parts.append(f%22Notebook: ligado por %7Bself.__time_on%7D min%22)%0A        else:%0A            parts.append(%22Notebook: desligado%22)%0A        if self.__charger:%0A            parts.append(str(self.__charger))%0A        if self.__battery:%0A            parts.append(str(self.__battery))%0A        print(%22, %22.join(parts))\n %0A%0A%0Ad\n@@ -3273,16 +3273,17 @@\n ebook()%0A\n+%0A\n     whil\n@@ -3385,606 +3385,630 @@\n eak%0A\n-%0A        if line == %22end%22:%0A            print(%22$end%22)%0A            break%0A%0A        print(f%22$%7Bline%7D%22)%0A        cmd = line.split()%0A        if cmd%5B0%5D == %22show%22:%0A            nb.show()%0A        elif cmd%5B0%5D == %22turn_on%22:%0A            nb.turn_on()%0A        elif cmd%5B0%5D == %22turn_off%22:%0A            nb.turn_off()%0A        elif cmd%5B0%5D == %22use%22:%0A            nb.use(int(cmd%5B1%5D))%0A        elif cmd%5B0%5D == %22set_charger%22:%0A            nb.set_charger(int(cmd%5B1%5D))%0A        elif cmd%5B0%5D == %22rm_charger%22:%0A            nb.rm_charger()%0A        elif cmd%5B0%5D == %22set_battery%22:%0A            nb.set_battery(int(cmd%5B1%5D))%0A        elif cmd%5B0%5D\n+        if not line:%0A            continue%0A%0A        print(f%22$%7Bline%7D%22)%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A%0A        if cmd == %22end%22:%0A            break%0A        elif cmd == %22show%22:%0A            nb.show()%0A        elif cmd == %22turn_on%22:%0A            nb.turn_on()%0A        elif cmd == %22turn_off%22:%0A            nb.turn_off()%0A        elif cmd == %22use%22:%0A            nb.use(int(parts%5B1%5D))%0A        elif cmd == %22set_charger%22:%0A            nb.set_charger(int(parts%5B1%5D))%0A        elif cmd == %22rm_charger%22:%0A            nb.rm_charger()%0A        elif cmd == %22set_battery%22:%0A            nb.set_battery(int(parts%5B1%5D))%0A        elif cmd\n  == \n",
            "lines": "160"
        },
        {
            "label": "2025-10-25_14-45-59",
            "content": "@@ -35,3215 +35,3254 @@\n lf, \n-capacity: int):%0A        self.__capacity = capacity%0A        self.__charge = capacity%0A%0A    def use(self, minutes: int):%0A        self.__charge -= minutes%0A        if self.__charge %3C= 0:%0A            self.__charge = 0%0A            return False%0A        return True%0A%0A    def charge(self, power: int, minutes: int):%0A        self.__charge += power * minutes%0A        if self.__charge %3E self.__capacity:%0A            self.__charge = self.__capacity%0A%0A    def __str__(self):%0A        return f%22Bateria %7Bself.__charge%7D/%7Bself.__capacity%7D%22%0A%0A    def get_charge(self):%0A        return self.__charge%0A%0A    def get_capacity(self):%0A        return self.__capacity%0A%0A%0Aclass Charger:%0A    def __init__(self, power: int):%0A        self.__power = power%0A%0A    def get_power(self):%0A        return self.__power%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.__power%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__on = False%0A        self.__time_on = 0%0A        self.__battery = None%0A        self.__charger = None%0A%0A    def turn_on(self):%0A        if self.__on:%0A            return%0A        if (self.__battery and self.__battery.get_charge() %3E 0) or self.__charger:%0A            self.__on = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def turn_off(self):%0A        self.__on = False%0A%0A    def use(self, minutes: int):%0A        if not self.__on:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        if self.__battery and not self.__charger:%0A            if not self.__battery.use(minutes):%0A                print(%22fail: descarregou%22)%0A                self.__on = False%0A                return%0A%0A        elif self.__charger and not self.__battery:%0A            pass  # usa indefinidamente%0A%0A        elif self.__battery and self.__charger:%0A            self.__battery.charge(self.__charger.get_power(), minutes)%0A%0A        else:%0A            print(%22fail: sem energia%22)%0A            self.__on = False%0A            return%0A%0A        self.__time_on += minutes%0A%0A    def set_battery(self, capacity: int):%0A        if self.__battery is not None:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.__battery = Battery(capacity)%0A%0A    def rm_battery(self):%0A        if self.__battery is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__battery.get_charge()%7D/%7Bself.__battery.get_capacity()%7D%22)%0A        self.__battery = None%0A        self.__on = False%0A%0A    def set_charger(self, power: int):%0A        if self.__charger is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__charger = Charger(power)%0A%0A    def rm_charger(self):%0A        if self.__charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__charger.get_power()%7DW%22)%0A        self.__charger = None%0A        self.__on = False%0A%0A    def show(self):%0A        parts = %5B%5D%0A        if self.__on:%0A            parts.append(f%22Notebook: ligado por %7Bself.__time_on%7D min%22)%0A        else:%0A            parts.append(%22Notebook: desligado%22)%0A        if self.__charger:%0A            parts.append(str(self.__charger))%0A        if self.__battery:%0A            parts.append(str(self.__battery))%0A        print(%22, %22.join(parts))\n+max_charge: int):%0A        self.max_charge = max_charge%0A        self.charge = max_charge%0A%0A    def __str__(self):%0A        return f%22Bateria %7Bint(self.charge)%7D/%7Bself.max_charge%7D%22%0A%0A%0Aclass Charger:%0A    def __init__(self, watts: int):%0A        self.watts = watts%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.watts%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.on = False%0A        self.time = 0%0A        self.charger = None%0A        self.battery = None%0A%0A    def show(self):%0A        status = %22ligado%22 if self.on else %22desligado%22%0A        if self.on:%0A            msg = f%22Notebook: ligado por %7Bself.time%7D min%22%0A        else:%0A            msg = %22Notebook: desligado%22%0A%0A        parts = %5B%5D%0A        if self.charger is not None:%0A            parts.append(str(self.charger))%0A        if self.battery is not None:%0A            parts.append(str(self.battery))%0A%0A        if parts:%0A            msg += %22, %22 + %22, %22.join(parts)%0A        print(msg)%0A%0A    def set_charger(self, watts: int):%0A        if self.charger is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.charger = Charger(watts)%0A%0A    def rm_charger(self):%0A        if self.charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.charger.watts%7DW%22)%0A        self.charger = None%0A        if self.battery is None:%0A            self.on = False%0A%0A    def set_battery(self, max_charge: int):%0A        if self.battery is not None:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.battery = Battery(max_charge)%0A%0A    def rm_battery(self):%0A        if self.battery is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A%0A        print(f%22Removido %7Bint(self.battery.charge)%7D/%7Bself.battery.max_charge%7D%22)%0A        self.battery = None%0A%0A        # %E2%9C%85 se n%C3%A3o houver carregador, desliga%0A        if self.charger is None:%0A            self.on = False%0A%0A    def turn_on(self):%0A        if self.on:%0A            return%0A        if self.charger is None and (self.battery is None or self.battery.charge == 0):%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A            return%0A        self.on = True%0A%0A    def turn_off(self):%0A        self.on = False%0A%0A    def use(self, minutes: int):%0A        if not self.on:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        for _ in range(minutes):%0A            # consumo de energia%0A            if self.battery is not None:%0A                if self.battery.charge %3E 0:%0A                    self.battery.charge -= 1%0A                elif self.charger is None:%0A                    # sem bateria e sem carregador %E2%86%92 desliga%0A                    print(%22fail: descarregou%22)%0A                    self.battery.charge = 0%0A                    self.on = False%0A                    return%0A            elif self.charger is None:%0A                print(%22fail: descarregou%22)%0A                self.on = False%0A                return%0A%0A            # recarga se houver carregador e bateria%0A            if self.charger is not None and self.battery is not None:%0A                self.battery.charge += self.charger.watts%0A                if self.battery.charge %3E self.battery.max_charge:%0A                    self.battery.charge = self.battery.max_charge%0A%0A            self.time += 1\n %0A%0A%0Ad\n@@ -3312,17 +3312,16 @@\n ebook()%0A\n-%0A\n     whil\n@@ -3423,630 +3423,606 @@\n eak%0A\n-        if not line:%0A            continue%0A%0A        print(f%22$%7Bline%7D%22)%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A%0A        if cmd == %22end%22:%0A            break%0A        elif cmd == %22show%22:%0A            nb.show()%0A        elif cmd == %22turn_on%22:%0A            nb.turn_on()%0A        elif cmd == %22turn_off%22:%0A            nb.turn_off()%0A        elif cmd == %22use%22:%0A            nb.use(int(parts%5B1%5D))%0A        elif cmd == %22set_charger%22:%0A            nb.set_charger(int(parts%5B1%5D))%0A        elif cmd == %22rm_charger%22:%0A            nb.rm_charger()%0A        elif cmd == %22set_battery%22:%0A            nb.set_battery(int(parts%5B1%5D))%0A        elif cmd\n+%0A        if line == %22end%22:%0A            print(%22$end%22)%0A            break%0A%0A        print(f%22$%7Bline%7D%22)%0A        cmd = line.split()%0A        if cmd%5B0%5D == %22show%22:%0A            nb.show()%0A        elif cmd%5B0%5D == %22turn_on%22:%0A            nb.turn_on()%0A        elif cmd%5B0%5D == %22turn_off%22:%0A            nb.turn_off()%0A        elif cmd%5B0%5D == %22use%22:%0A            nb.use(int(cmd%5B1%5D))%0A        elif cmd%5B0%5D == %22set_charger%22:%0A            nb.set_charger(int(cmd%5B1%5D))%0A        elif cmd%5B0%5D == %22rm_charger%22:%0A            nb.rm_charger()%0A        elif cmd%5B0%5D == %22set_battery%22:%0A            nb.set_battery(int(cmd%5B1%5D))%0A        elif cmd%5B0%5D\n  == \n",
            "lines": "151"
        },
        {
            "label": "2025-10-25_14-46-33",
            "content": "@@ -60,26 +60,26 @@\n    self.\n-max_charge\n+__capacity\n  = capac\n@@ -91,24 +91,26 @@\n        self.\n+__\n charge = cap\n@@ -128,298 +128,261 @@\n def \n-__str__(self):%0A        return f%22Bateria %7Bint(\n+use(self, minutes: int):%0A        \n self.\n+__\n charge\n-)%7D/%7B\n+ -= minutes%0A        if \n self.\n-max\n+_\n _charge\n-%7D%22%0A%0A%0Aclass Charger:%0A    def __init__(self, watts: int):%0A\n+ %3C= 0:%0A     \n        \n- \n self.\n-watts = watts%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.watts%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.on = False\n+__charge = 0%0A            return False%0A        return True%0A%0A    def charge(self, power: int, minutes: int):%0A        self.__charge += power * minutes\n %0A   \n@@ -390,22 +390,48 @@\n     \n+if \n self.\n-time = 0%0A\n+__charge %3E self.__capacity:%0A    \n     \n@@ -443,50 +443,34 @@\n elf.\n+__\n charge\n-r\n  = \n-None%0A        self.battery = None\n+self.__capacity\n %0A%0A  \n@@ -502,388 +502,353 @@\n     \n-if not self.on:%0A            base = %22Notebook: desligado%22%0A        else:%0A            base = f%22Notebook: ligado por %7Bself.time%7D min%22%0A%0A        if self.charger is not None and self.battery is not None:%0A            base += f%22, Carregador %7Bself.charger.watts%7DW, Bateria %7Bint(self.battery.charge)%7D/%7Bself.battery.max_charge%7D%22%0A        elif self.charger is not None:%0A            base +=\n+return f%22Bateria %7Bself.__charge%7D/%7Bself.__capacity%7D%22%0A%0A    def get_charge(self):%0A        return self.__charge%0A%0A    def get_capacity(self):%0A        return self.__capacity%0A%0A%0Aclass Charger:%0A    def __init__(self, power: int):%0A        self.__power = power%0A%0A    def get_power(self):%0A        return self.__power%0A%0A    def __str__(self):%0A        return\n  f%22\n-, \n Carr\n@@ -864,254 +864,174 @@\n elf.\n-charger.watts%7DW%22%0A        elif self.battery is not None\n+__power%7DW%22%0A%0A%0Aclass Notebook\n :%0A    \n-        base += f%22, Bateria %7Bint(self.battery.charge)%7D/%7Bself.battery.max_charge%7D%22%0A%0A        return base%0A%0A\n+def __init__(self):%0A        self.__on = False%0A \n     \n-def show(self):%0A        print(self)%0A%0A    # ---------- TURN ON / OFF ----------\n+   self.__time_on = 0%0A        self.__battery = None%0A        self.__charger = None%0A\n %0A   \n@@ -1062,24 +1062,26 @@\n     if self.\n+__\n on:%0A        \n@@ -1104,32 +1104,34 @@\n    if (self.\n+__\n battery \n is not None \n@@ -1118,28 +1118,16 @@\n battery \n-is not None \n and self\n@@ -1123,32 +1123,34 @@\n ry and self.\n+__\n battery.\n charge %3E 0) \n@@ -1133,30 +1133,36 @@\n f.__battery.\n+get_\n charge\n+()\n  %3E 0) or sel\n@@ -1163,35 +1163,25 @@\n or self.\n+__\n charger\n- is not None\n :%0A      \n@@ -1187,24 +1187,26 @@\n        self.\n+__\n on = True%0A  \n@@ -1297,32 +1297,34 @@\n ):%0A        self.\n+__\n on = False%0A%0A    \n@@ -1323,40 +1323,8 @@\n se%0A%0A\n-    # ---------- USE ----------%0A\n     \n@@ -1372,16 +1372,18 @@\n ot self.\n+__\n on:%0A    \n@@ -1439,90 +1439,8 @@\n rn%0A%0A\n-        for _ in range(minutes):%0A            # 1%EF%B8%8F%E2%83%A3 Consome bateria, se houver%0A    \n     \n@@ -1447,32 +1447,34 @@\n     if self.\n+__\n battery \n is not None:\n@@ -1465,63 +1465,30 @@\n ery \n-is\n+and\n  not \n-None:%0A                if self.battery.\n+self.__\n charge\n- %3E 0\n+r\n :%0A  \n@@ -1501,164 +1501,30 @@\n     \n-        self.battery.charge -= 1%0A                elif self.charger is None:%0A                    print(%22fail: descarregou%22)%0A                   \n+if not\n  self.\n+__\n battery.\n char\n@@ -1523,119 +1523,20 @@\n ery.\n-charge = 0%0A                    self.on = False%0A                    return%0A            elif self.charger is None\n+use(minutes)\n :%0A  \n@@ -1589,32 +1589,34 @@\n            self.\n+__\n on = False%0A     \n@@ -1646,75 +1646,18 @@\n     \n-    # 2%EF%B8%8F%E2%83%A3 Carrega bateria se houver carregador%0A            \n+el\n if self.\n char\n@@ -1648,32 +1648,34 @@\n   elif self.\n+__\n charger \n is not None \n@@ -1666,48 +1666,30 @@\n ger \n-is\n+and\n  not \n-None and \n self.\n+__\n battery\n- is not None\n :%0A  \n@@ -1702,53 +1702,36 @@\n     \n-    self.battery.charge += self.charger.watts\n+pass  # usa indefinidamente%0A\n %0A   \n@@ -1735,32 +1735,26 @@\n         \n-        \n+el\n if self.\n battery.\n@@ -1749,48 +1749,36 @@\n elf.\n+__\n battery\n-.charge %3E self.battery.max\n+ and self._\n _charge\n+r\n :%0A  \n@@ -1787,29 +1787,23 @@\n         \n-        \n self.\n+__\n battery.\n@@ -1812,685 +1812,184 @@\n arge\n- = \n+(\n self.\n-battery.max_charge%0A%0A            self.time += 1%0A%0A    # ---------- CHARGER ----------%0A    def set_charger(self, watts: int):%0A        if self.charger is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.charger = Charger(watts\n+__charger.get_power(), minutes)%0A%0A        else:%0A            print(%22fail: sem energia%22\n )%0A\n-%0A\n     \n-def rm_charger(self):%0A\n+ \n        \n- if \n self.\n-charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A%0A        print(f%22Removido %7Bself.charger.watts%7DW%22)%0A        self.charger = None%0A%0A        # se estiver ligado s%C3%B3 com bateria e ela estiver sem carga, desliga%0A        if self.battery is None or self.battery.charge == 0:%0A            self.on = False%0A%0A    # ---------- BATTERY ----------\n+__on = False%0A            return%0A%0A        self.__time_on += minutes%0A\n %0A   \n@@ -2035,32 +2035,34 @@\n         if self.\n+__\n battery is not N\n@@ -2138,32 +2138,34 @@\n rn%0A        self.\n+__\n battery = Batter\n@@ -2215,24 +2215,26 @@\n     if self.\n+__\n battery is N\n@@ -2288,33 +2288,32 @@\n          return%0A\n-%0A\n         print(f%22\n@@ -2326,25 +2326,23 @@\n do %7B\n-int(\n self.\n+__\n battery.\n char\n@@ -2337,22 +2337,27 @@\n battery.\n+get_\n charge\n+(\n )%7D/%7Bself\n@@ -2357,24 +2357,26 @@\n %7D/%7Bself.\n+__\n battery.\n max_char\n@@ -2371,18 +2371,22 @@\n ery.\n-max_charge\n+get_capacity()\n %7D%22)%0A\n@@ -2398,16 +2398,18 @@\n    self.\n+__\n battery \n@@ -2415,25 +2415,24 @@\n  = None%0A\n-%0A\n         \n # %E2%9A%99%EF%B8%8F S%C3%B3 \n@@ -2427,48 +2427,241 @@\n     \n-# %E2%9A%99%EF%B8%8F S%C3%B3 desliga se n%C3%A3o houver carregador\n+self.__on = False%0A%0A    def set_charger(self, power: int):%0A        if self.__charger is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__charger = Charger(power)%0A%0A    def rm_charger(self):\n %0A   \n@@ -2673,16 +2673,18 @@\n if self.\n+__\n charger \n@@ -2708,55 +2708,544 @@\n     \n-self.on = False%0A%0A%0A# ---------- SHELL ----------\n+print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__charger.get_power()%7DW%22)%0A        self.__charger = None%0A        self.__on = False%0A%0A    def show(self):%0A        parts = %5B%5D%0A        if self.__on:%0A            parts.append(f%22Notebook: ligado por %7Bself.__time_on%7D min%22)%0A        else:%0A            parts.append(%22Notebook: desligado%22)%0A        if self.__charger:%0A            parts.append(str(self.__charger))%0A        if self.__battery:%0A            parts.append(str(self.__battery))%0A        print(%22, %22.join(parts))%0A%0A\n %0Adef\n@@ -3315,19 +3315,20 @@\n         \n-cmd\n+line\n  = input\n@@ -3341,16 +3341,8 @@\n ip()\n-.split()\n %0A   \n@@ -3381,17 +3381,16 @@\n   break%0A\n-%0A\n         \n@@ -3396,21 +3396,16 @@\n  if \n-len(cmd) == 0\n+not line\n :%0A  \n@@ -3446,24 +3446,67 @@\n f%22$%7B\n-' '.join(cmd)%7D%22)\n+line%7D%22)%0A        parts = line.split()%0A        cmd = parts%5B0%5D\n %0A%0A  \n@@ -3513,27 +3513,24 @@\n       if cmd\n-%5B0%5D\n  == %22end%22:%0A \n@@ -3558,27 +3558,24 @@\n     elif cmd\n-%5B0%5D\n  == %22show%22:%0A\n@@ -3604,35 +3604,32 @@\n         elif cmd\n-%5B0%5D\n  == %22turn_on%22:%0A \n@@ -3664,27 +3664,24 @@\n     elif cmd\n-%5B0%5D\n  == %22turn_of\n@@ -3722,27 +3722,24 @@\n     elif cmd\n-%5B0%5D\n  == %22use%22:%0A \n@@ -3756,27 +3756,29 @@\n  nb.use(int(\n-cmd\n+parts\n %5B1%5D))%0A      \n@@ -3779,35 +3779,32 @@\n         elif cmd\n-%5B0%5D\n  == %22set_charger\n@@ -3833,27 +3833,29 @@\n charger(int(\n-cmd\n+parts\n %5B1%5D))%0A      \n@@ -3856,35 +3856,32 @@\n         elif cmd\n-%5B0%5D\n  == %22rm_charger%22\n@@ -3922,27 +3922,24 @@\n     elif cmd\n-%5B0%5D\n  == %22set_bat\n@@ -3976,19 +3976,21 @@\n ery(int(\n-cmd\n+parts\n %5B1%5D))%0A  \n@@ -4003,19 +4003,16 @@\n elif cmd\n-%5B0%5D\n  == %22rm_\n",
            "lines": "160"
        },
        {
            "label": "2025-10-25_14-52-09",
            "content": "@@ -60,26 +60,26 @@\n    self.\n-__capacity\n+max_charge\n  = capac\n@@ -87,34 +87,32 @@\n ty%0A        self.\n-__\n charge = capacit\n@@ -126,261 +126,298 @@\n def \n-use(self, minutes: int):%0A        \n+__str__(self):%0A        return f%22Bateria %7Bint(\n self.\n-__\n charge\n- -= minutes%0A        if \n+)%7D/%7B\n self.\n-_\n+max\n _charge\n- %3C= 0:%0A     \n+%7D%22%0A%0A%0Aclass Charger:%0A    def __init__(self, watts: int):%0A\n        \n+ \n self.\n-__charge = 0%0A            return False%0A        return True%0A%0A    def charge(self, power: int, minutes: int):%0A        self.__charge += power * minutes\n+watts = watts%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.watts%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.on = False\n %0A   \n@@ -425,48 +425,22 @@\n     \n-if \n self.\n-__charge %3E self.__capacity:%0A    \n+time = 0%0A\n     \n@@ -452,34 +452,50 @@\n elf.\n-__\n charge\n+r\n  = \n-self.__capacity\n+None%0A        self.battery = None\n %0A%0A  \n@@ -527,353 +527,388 @@\n     \n-return f%22Bateria %7Bself.__charge%7D/%7Bself.__capacity%7D\n+if not self.on:%0A            base = %22Notebook: desligado\n %22%0A\n-%0A\n     \n-def get_charge(self):%0A        return self.__charge%0A%0A    def get_capacity(self):%0A        return self.__capacity%0A%0A%0Aclass Charger:%0A    def __init__(self, power: int):%0A        self.__power = power%0A%0A    def get_power(self):%0A        return self.__power%0A%0A    def __str__(self):%0A        return\n+    else:%0A            base = f%22Notebook: ligado por %7Bself.time%7D min%22%0A%0A        if self.charger is not None and self.battery is not None:%0A            base += f%22, Carregador %7Bself.charger.watts%7DW, Bateria %7Bint(self.battery.charge)%7D/%7Bself.battery.max_charge%7D%22%0A        elif self.charger is not None:%0A            base +=\n  f%22\n+, \n Carr\n@@ -924,174 +924,254 @@\n elf.\n-__power%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__on = Fal\n+charger.watts%7DW%22%0A        elif self.battery is not None:%0A            base += f%22, Bateria %7Bint(self.battery.charge)%7D/%7Bself.battery.max_charge%7D%22%0A%0A        return ba\n se%0A\n+%0A\n     \n-    self.__time_on = 0%0A        self.__battery = None%0A        self.__charger = None%0A\n+def show(self):%0A        print(self)%0A%0A    # ---------- TURN ON / OFF ----------\n %0A   \n@@ -1198,34 +1198,32 @@\n         if self.\n-__\n on:%0A            \n@@ -1242,34 +1242,32 @@\n    if (self.\n-__\n battery \n and self.__b\n@@ -1246,32 +1246,44 @@\n f (self.battery \n+is not None \n and self.__batte\n@@ -1271,34 +1271,32 @@\n ne and self.\n-__\n battery.\n get_charge()\n@@ -1283,28 +1283,22 @@\n battery.\n-get_\n charge\n-()\n  %3E 0) or\n@@ -1299,33 +1299,43 @@\n  0) or self.\n-__\n charger\n+ is not None\n :%0A          \n@@ -1337,26 +1337,24 @@\n        self.\n-__\n on = True%0A  \n@@ -1445,34 +1445,32 @@\n ):%0A        self.\n-__\n on = False%0A%0A    \n@@ -1457,32 +1457,64 @@\n elf.on = False%0A%0A\n+    # ---------- USE ----------%0A\n     def use(self\n@@ -1546,26 +1546,24 @@\n if not self.\n-__\n on:%0A        \n@@ -1603,32 +1603,114 @@\n         return%0A%0A\n+        for _ in range(minutes):%0A            # 1%EF%B8%8F%E2%83%A3 Consome bateria, se houver%0A    \n         if self.\n@@ -1705,34 +1705,32 @@\n     if self.\n-__\n battery \n and not self\n@@ -1721,66 +1721,233 @@\n ery \n-and not\n+is not None:%0A                if self.battery.charge %3E 0:%0A                    self.battery.charge -= 1%0A                elif\n  self.\n-__\n charger\n-:%0A            if not\n+ is None:%0A                    print(%22fail: descarregou%22)%0A                   \n  self.\n-__\n battery.\n use(\n@@ -1946,20 +1946,119 @@\n ery.\n-use(minutes)\n+charge = 0%0A                    self.on = False%0A                    return%0A            elif self.charger is None\n :%0A  \n@@ -2111,34 +2111,32 @@\n            self.\n-__\n on = False%0A     \n@@ -2162,26 +2162,83 @@\n         \n-el\n+    # 2%EF%B8%8F%E2%83%A3 Carrega bateria se houver carregador%0A            \n if self.\n __charge\n@@ -2229,26 +2229,24 @@\n if self.\n-__\n charger \n and not \n@@ -2241,30 +2241,48 @@\n ger \n-and\n+is\n  not \n+None and \n self.\n-__\n battery\n+ is not None\n :%0A  \n@@ -2295,45 +2295,68 @@\n     \n-pass  # usa indefinidamente%0A%0A\n+    self.battery.charge += self.charger.watts%0A      \n         \n elif\n@@ -2351,26 +2351,26 @@\n         \n-el\n+  \n if self.\n __batter\n@@ -2365,36 +2365,48 @@\n elf.\n-__\n battery\n- and self._\n+.charge %3E self.battery.max\n _charge\n-r\n :%0A  \n@@ -2411,31 +2411,37 @@\n             \n+        \n self.\n-__\n battery.char\n@@ -2446,184 +2446,685 @@\n arge\n-(\n+ = \n self.\n-__charger.get_power(), minutes)%0A%0A        else:%0A            print(%22fail: sem energia%22\n+battery.max_charge%0A%0A            self.time += 1%0A%0A    # ---------- CHARGER ----------%0A    def set_charger(self, watts: int):%0A        if self.charger is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.charger = Charger(watts\n )%0A\n+%0A\n     \n- \n+def rm_charger(self):%0A\n        \n+ if \n self.\n-__on = False%0A            return%0A%0A        self.__time_on += minutes%0A\n+charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A%0A        print(f%22Removido %7Bself.charger.watts%7DW%22)%0A        self.charger = None%0A%0A        # se estiver ligado s%C3%B3 com bateria e ela estiver sem carga, desliga%0A        if self.battery is None or self.battery.charge == 0:%0A            self.on = False%0A%0A    # ---------- BATTERY ----------\n %0A   \n@@ -3170,34 +3170,32 @@\n         if self.\n-__\n battery is not N\n@@ -3271,34 +3271,32 @@\n rn%0A        self.\n-__\n battery = Batter\n@@ -3346,26 +3346,24 @@\n     if self.\n-__\n battery is N\n@@ -3417,32 +3417,33 @@\n          return%0A\n+%0A\n         print(f%22\n@@ -3452,31 +3452,33 @@\n movido %7B\n+int(\n self.\n-__\n battery.\n get_char\n@@ -3473,19 +3473,14 @@\n ery.\n-get_\n charge\n-(\n )%7D/%7B\n@@ -3488,18 +3488,16 @@\n elf.\n-__\n battery.\n get_\n@@ -3496,22 +3496,18 @@\n ery.\n-get_capacity()\n+max_charge\n %7D%22)%0A\n@@ -3515,26 +3515,24 @@\n        self.\n-__\n battery = No\n@@ -3530,32 +3530,33 @@\n tery = None%0A\n+%0A\n         \n self.__on = \n@@ -3547,241 +3547,48 @@\n     \n-self.__on = False%0A%0A    def set_charger(self, power: int):%0A        if self.__charger is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__charger = Charger(power)%0A%0A    def rm_charger(self):\n+# %E2%9A%99%EF%B8%8F S%C3%B3 desliga se n%C3%A3o houver carregador\n %0A   \n@@ -3596,26 +3596,24 @@\n     if self.\n-__\n charger is N\n@@ -3633,544 +3633,55 @@\n     \n-print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__charger.get_power()%7DW%22)%0A        self.__charger = None%0A        self.__on = False%0A%0A    def show(self):%0A        parts = %5B%5D%0A        if self.__on:%0A            parts.append(f%22Notebook: ligado por %7Bself.__time_on%7D min%22)%0A        else:%0A            parts.append(%22Notebook: desligado%22)%0A        if self.__charger:%0A            parts.append(str(self.__charger))%0A        if self.__battery:%0A            parts.append(str(self.__battery))%0A        print(%22, %22.join(parts))%0A%0A\n+self.on = False%0A%0A%0A# ---------- SHELL ----------\n %0Adef\n@@ -3751,20 +3751,19 @@\n         \n-line\n+cmd\n  = input\n@@ -3772,16 +3772,24 @@\n .strip()\n+.split()\n %0A       \n@@ -3816,32 +3816,33 @@\n           break%0A\n+%0A\n         if not l\n@@ -3840,16 +3840,21 @@\n  if \n-not line\n+len(cmd) == 0\n :%0A  \n@@ -3895,67 +3895,24 @@\n f%22$%7B\n-line%7D%22)%0A        parts = line.split()%0A        cmd = parts%5B0%5D\n+' '.join(cmd)%7D%22)\n %0A%0A  \n@@ -3919,24 +3919,27 @@\n       if cmd\n+%5B0%5D\n  == %22end%22:%0A \n@@ -3967,24 +3967,27 @@\n     elif cmd\n+%5B0%5D\n  == %22show%22:%0A\n@@ -4016,32 +4016,35 @@\n         elif cmd\n+%5B0%5D\n  == %22turn_on%22:%0A \n@@ -4079,24 +4079,27 @@\n     elif cmd\n+%5B0%5D\n  == %22turn_of\n@@ -4140,24 +4140,27 @@\n     elif cmd\n+%5B0%5D\n  == %22use%22:%0A \n@@ -4177,29 +4177,27 @@\n  nb.use(int(\n-parts\n+cmd\n %5B1%5D))%0A      \n@@ -4198,32 +4198,35 @@\n         elif cmd\n+%5B0%5D\n  == %22set_charger\n@@ -4255,29 +4255,27 @@\n charger(int(\n-parts\n+cmd\n %5B1%5D))%0A      \n@@ -4276,32 +4276,35 @@\n         elif cmd\n+%5B0%5D\n  == %22rm_charger%22\n@@ -4345,24 +4345,27 @@\n     elif cmd\n+%5B0%5D\n  == %22set_bat\n@@ -4406,13 +4406,11 @@\n int(\n-parts\n+cmd\n %5B1%5D)\n@@ -4427,16 +4427,19 @@\n elif cmd\n+%5B0%5D\n  == %22rm_\n",
            "lines": "161"
        },
        {
            "label": "2025-10-25_14-52-23",
            "content": "class Battery:\n    def __init__(self, capacity: int):\n        self.__capacity = capacity\n        self.__charge = capacity\n\n    def use(self, minutes: int):\n        self.__charge -= minutes\n        if self.__charge <= 0:\n            self.__charge = 0\n            return False\n        return True\n\n    def charge(self, power: int, minutes: int):\n        self.__charge += power * minutes\n        if self.__charge > self.__capacity:\n            self.__charge = self.__capacity\n\n    def __str__(self):\n        return f\"Bateria {self.__charge}/{self.__capacity}\"\n\n    def get_charge(self):\n        return self.__charge\n\n    def get_capacity(self):\n        return self.__capacity\n\n\nclass Charger:\n    def __init__(self, power: int):\n        self.__power = power\n\n    def get_power(self):\n        return self.__power\n\n    def __str__(self):\n        return f\"Carregador {self.__power}W\"\n\n\nclass Notebook:\n    def __init__(self):\n        self.__on = False\n        self.__time_on = 0\n        self.__battery = None\n        self.__charger = None\n\n    def turn_on(self):\n        if self.__on:\n            return\n        if (self.__battery and self.__battery.get_charge() > 0) or self.__charger:\n            self.__on = True\n        else:\n            print(\"fail: n\u00e3o foi poss\u00edvel ligar\")\n\n    def turn_off(self):\n        self.__on = False\n\n    def use(self, minutes: int):\n        if not self.__on:\n            print(\"fail: desligado\")\n            return\n\n        if self.__battery and not self.__charger:\n            if not self.__battery.use(minutes):\n                print(\"fail: descarregou\")\n                self.__on = False\n                return\n\n        elif self.__charger and not self.__battery:\n            pass  # usa indefinidamente\n\n        elif self.__battery and self.__charger:\n            self.__battery.charge(self.__charger.get_power(), minutes)\n\n        else:\n            print(\"fail: sem energia\")\n            self.__on = False\n            return\n\n        self.__time_on += minutes\n\n    def set_battery(self, capacity: int):\n        if self.__battery is not None:\n            print(\"fail: bateria j\u00e1 conectada\")\n            return\n        self.__battery = Battery(capacity)\n\n    def rm_battery(self):\n        if self.__battery is None:\n            print(\"fail: Sem bateria\")\n            return\n        print(f\"Removido {self.__battery.get_charge()}/{self.__battery.get_capacity()}\")\n        self.__battery = None\n        self.__on = False\n\n    def set_charger(self, power: int):\n        if self.__charger is not None:\n            print(\"fail: carregador j\u00e1 conectado\")\n            return\n        self.__charger = Charger(power)\n\n    def rm_charger(self):\n        if self.__charger is None:\n            print(\"fail: Sem carregador\")\n            return\n        print(f\"Removido {self.__charger.get_power()}W\")\n        self.__charger = None\n        self.__on = False\n\n    def show(self):\n        parts = []\n        if self.__on:\n            parts.append(f\"Notebook: ligado por {self.__time_on} min\")\n        else:\n            parts.append(\"Notebook: desligado\")\n        if self.__charger:\n            parts.append(str(self.__charger))\n        if self.__battery:\n            parts.append(str(self.__battery))\n        print(\", \".join(parts))\n\n\ndef main():\n    nb = Notebook()\n\n    while True:\n        try:\n            line = input().strip()\n        except EOFError:\n            break\n        if not line:\n            continue\n\n        print(f\"${line}\")\n        parts = line.split()\n        cmd = parts[0]\n\n        if cmd == \"end\":\n            break\n        elif cmd == \"show\":\n            nb.show()\n        elif cmd == \"turn_on\":\n            nb.turn_on()\n        elif cmd == \"turn_off\":\n            nb.turn_off()\n        elif cmd == \"use\":\n            nb.use(int(parts[1]))\n        elif cmd == \"set_charger\":\n            nb.set_charger(int(parts[1]))\n        elif cmd == \"rm_charger\":\n            nb.rm_charger()\n        elif cmd == \"set_battery\":\n            nb.set_battery(int(parts[1]))\n        elif cmd == \"rm_battery\":\n            nb.rm_battery()\n        else:\n            print(\"fail: comando inv\u00e1lido\")\n\n\nif __name__ == \"__main__\":\n    main()\n",
            "lines": "160"
        }
    ]
}